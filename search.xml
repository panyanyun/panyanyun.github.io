<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[HTML5标签（功能排序）更新中ing]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2FHTML%2FHTML5%E6%A0%87%E7%AD%BE%EF%BC%88%E5%8A%9F%E8%83%BD%E6%8E%92%E5%BA%8F%EF%BC%89%2F</url>
    <content type="text"><![CDATA[目录： 1、基础 &lt;!DOCTYPE&gt; 定义文档类型 &lt;html&gt;&lt;/html&gt; 一个HTML文档 &lt;title&gt;&lt;/title&gt; 文档标题 &lt;body&gt;&lt;/body&gt; 文档主体 &lt;h1&gt;&lt;/h1&gt; to &lt;h6&gt;&lt;/h6&gt; 文中标题 &lt;p&gt;&lt;/p&gt; 段落 &lt;br&gt; 换行 &lt;hr&gt; 水平线 &lt;!–…–&gt; 注释 2、格式 缩写词 &lt;abbr&gt;&lt;/abbr&gt; 联系信息 &lt;address&gt;&lt;/address&gt; 文本方向 文本方向 &lt;bdo&gt;&lt;/bdo&gt; 脱离父元素文本方向 &lt;bdi&gt;&lt;/bdi&gt; 引用 块引用 &lt;blockquote&gt;&lt;/blockquote&gt; 短引用 &lt;q&gt;&lt;/q&gt; 作品标题/引用 &lt;cite&gt;&lt;/cite&gt; 电脑代码 &lt;code&gt;&lt;/code&gt; 变量 &lt;var&gt;&lt;/var&gt; 计算机样本 &lt;samp&gt;&lt;/samp&gt; 键盘文本 &lt;kbd&gt;&lt;/kbd&gt; 定义一个定义项目 &lt;dfn&gt;&lt;/dfn&gt; 加粗 &lt;strong&gt;&lt;/strong&gt; 强调 &lt;em&gt;&lt;/em&gt; 加粗 &lt;b&gt;&lt;/b&gt; 斜体 &lt;i&gt;&lt;/i&gt; 小号标注 &lt;small&gt;&lt;/small&gt; 高亮文本 &lt;mark&gt;&lt;/mark&gt; 上标、下标 下标 &lt;sub&gt;&lt;/sub&gt; 上标 &lt;sup&gt;&lt;/sup&gt; 预格式文本 &lt;pre&gt;&lt;/pre&gt; 删除线、下划线 被插入文本 &lt;ins&gt;&lt;/ins&gt; 被删除文本 &lt;del&gt;&lt;/del&gt; 加删除线 &lt;s&gt;&lt;/s&gt; 加下划线 &lt;u&gt;&lt;/u&gt; 在文本合适处添加换行 &lt;wbr&gt; 度量衡 &lt;meter&gt; 进度条 &lt;progress&gt;&lt;/progress&gt; 中文注音 注音 &lt;rt&gt;&lt;/rt&gt; 不支持 ruby 元素的浏览器所显示的内容 &lt;rp&gt;&lt;/rp&gt; 注释（中文注音或字符） &lt;ruby&gt;&lt;/ruby&gt; 日期/时间 &lt;time&gt;&lt;/time&gt; HTML5不再支持 加删除线 &lt;strike&gt;&lt;/strike&gt; 字体、尺寸、颜色 &lt;font&gt;&lt;/font&gt; 打字机文本 &lt;tt&gt;&lt;/tt&gt; 3、表单 表单 &lt;form&gt;&lt;/form&gt; 输入控件 &lt;input&gt; 文本域 &lt;textarea&gt;&lt;/textarea&gt; 定义input元素的标注 &lt;label&gt;&lt;/label&gt; 表单边框 &lt;fieldset&gt;&lt;/fieldset&gt; 表单边框的标题 &lt;legend&gt;&lt;/legend&gt; 输入时可能的选项列表。&lt;datalist&gt;&lt;/datalist&gt; 表单的密钥对生成器字段 &lt;keygen&gt; 定义一个计算的结果 &lt;output&gt;&lt;/output&gt; 4、框架 &lt;frameset&gt;&lt;/frameset&gt; 框架集 &lt;frame&gt; 框架集的窗口或框架 &lt;noframes&gt;&lt;/noframes&gt; 针对不支持框架的用户的替代内容 &lt;iframe&gt;&lt;/iframe&gt; 内联框架 5、图像 &lt;img&gt; 定义图像 &lt;map&gt;&lt;/map&gt; 定义图像映射 &lt;area&gt; 定义图像地图内部的区域 &lt;canvas&gt;&lt;/canvas&gt; 通过脚本（通常是 JavaScript）来绘制图形 &lt;figure&gt;&lt;/figure&gt; 对元素进行组合 &lt;figcaption&gt;&lt;/figcaption&gt; 定义一个 caption for a &lt;figure&gt; element 6、Audio/Video &lt;audio&gt;&lt;/audio&gt; 定义声音，比如音乐或其他音频流 &lt;source&gt; 定义media元素 (&lt;video&gt; 和 &lt;audio&gt;)的媒体资源 &lt;track&gt; 为媒体(&lt;video&gt; 和 &lt;audio&gt;)元素定义外部文本轨道 &lt;video&gt;&lt;/video&gt; 定义一个音频或者视频 7、链接 &lt;a&gt; 定义一个链接 &lt;link&gt; 定义文档与外部资源的关系 &lt;nav&gt; 定义导航链接 8、列表 &lt;ul&gt;&lt;/ul&gt; 无序列表 &lt;ol&gt;&lt;/ol&gt; 有序列表 &lt;li&gt;&lt;/li&gt; 列表项 &lt;dir&gt;&lt;/dir&gt; 目录列表 &lt;dl&gt;&lt;/dl&gt; 定义列表 &lt;dt&gt;&lt;/dt&gt; 定义列表中的项目 &lt;dd&gt;&lt;/dd&gt; 定义列表中项目的描述 &lt;menu&gt;&lt;/menu&gt; 菜单列表 &lt;command&gt;&lt;/command&gt; 用户可能调用的命令（比如单选按钮、复选框或按钮） 9、表格 &lt;table&gt;&lt;/table&gt; 一个表格 &lt;caption&gt;&lt;/caption&gt; 表格标题 &lt;th&gt;&lt;/th&gt; 表头单元格 &lt;tr&gt;&lt;/tr&gt; 表格中的行 &lt;td&gt;&lt;/td&gt; 表格中的单元 &lt;thead&gt;&lt;/thead&gt; 表头内容 &lt;tbody&gt;&lt;/tbody&gt; 表格中的主体内容 &lt;tfoot&gt;&lt;/tfoot&gt; 表注内容（脚注） &lt;colgroup&gt;&lt;/colgroup&gt; 表格中供格式化的列组 &lt;col&gt; 表格中一个或多个列的属性值 10、样式/节 &lt;style&gt; 定义文档的样式信息 &lt;div&gt; 定义文档中的节 &lt;span&gt; 定义文档中的节 &lt;header&gt; 定义一个文档头部部分 &lt;footer&gt; 定义一个文档底部 &lt;section&gt; 定义了文档的某个区域 &lt;article&gt; 定义一个文章内容 &lt;aside&gt; 定义其所处内容之外的内容 &lt;details&gt; 定义了用户可见的或者隐藏的需求的补充细节 &lt;dialog&gt; 定义一个对话框或者窗口 &lt;summary&gt; 定义一个可见的标题。 当用户点击标题时会显示出详细信息 11、元信息 &lt;head&gt; 定义关于文档的信息 &lt;meta&gt; 定义关于 HTML 文档的元信息 &lt;base&gt; 定义页面中所有链接的默认地址或默认目标 &lt;basefont&gt; 定义页面中文本的默认字体、颜色或尺寸 12、程序 &lt;script&gt; 定义客户端脚本 &lt;noscript&gt; 定义针对不支持客户端脚本的用户的替代内容 &lt;applet&gt; 定义嵌入的 applet &lt;embed&gt; 定义了一个容器，用来嵌入外部应用或者互动程序（插件） &lt;object&gt; 定义嵌入的对象 &lt;param&gt; 定义对象的参数 1、基础1.1 &lt;!DOCTYPE&gt;定义文档类型 标签定义及使用说明: &lt;!DOCTYPE&gt; 声明位于文档中的最前面的位置，处于 &lt;html&gt; 标签之前。 它不是一个 HTML 标签；它是用来告知 Web 浏览器页面使用了哪种 HTML 版本。 代码实例 12345678910&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;文档标题&lt;/title&gt; &lt;/head&gt; &lt;body&gt; 文档内容...... &lt;/body&gt;&lt;/html&gt; 1.2 &lt;html&gt;&lt;/html&gt;一个HTML文档 标签定义及使用说明: &lt;html&gt; 标签告知浏览器这是一个 HTML 文档。 HTML文档中最外层的元素。是所有其他 HTML 元素（除了 &lt;!DOCTYPE&gt; 标签）的容器。 1.3 &lt;title&gt;&lt;/title&gt;文档标题 标签定义及使用说明: 在所有 HTML 文档中是必需的。 定义浏览器工具栏中的标题 提供页面被添加到收藏夹时的标题 显示在搜索引擎结果中的页面标题 一个 HTML 文档中不能有一个以上的&lt;title&gt; 元素。如果遗漏了&lt;title&gt; 标签，文档作为 HTML 是无效的。 1.4 &lt;body&gt;&lt;/body&gt;文档主体 标签定义及使用说明: 包含文档的所有内容（比如文本、超链接、图像、表格和列表等等）。 1.5 &lt;h1&gt;&lt;/h1&gt; to &lt;h6&gt;&lt;/h6&gt;文中标题 代码实例123456&lt;h1&gt;这是标题 1&lt;/h1&gt; &lt;h2&gt;这是标题 2&lt;/h2&gt; &lt;h3&gt;这是标题 3&lt;/h3&gt; &lt;h4&gt;这是标题 4&lt;/h4&gt; &lt;h5&gt;这是标题 5&lt;/h5&gt; &lt;h6&gt;这是标题 6&lt;/h6&gt; h1最高，h6最低。 1.6 &lt;p&gt;&lt;/p&gt;段落 提示说明 p元素会自动在其前后创建一些空白。 代码实例 1&lt;p&gt;这是一个&lt;/p&gt;段落。 1.7 &lt;br&gt;换行 说明： 在写地址信息或者写诗词时 &lt;br&gt; 标签非常有用。 请使用 &lt;br&gt; 标签来输入空行，而不是分割段落。 代码实例 123&lt;p&gt; 使用 br 元素&lt;br&gt;在文本中&lt;br&gt;换行。 &lt;/p&gt; 上述代码效果： 使用 br元素在文本中换行。 1.8 &lt;hr&gt;水平线 说明： &lt;hr&gt; 标签定义 HTML 页面中的主题变化（比如话题的转移），并显示为一条水平线。 &lt;hr&gt; 元素被用来分隔 HTML 页面中的内容（或者定义一个变化）。 HTML 与 XHTML 之间的差异: 在 HTML 中，&lt;hr&gt; 标签没有结束标签。 在 XHTML 中，&lt;hr&gt; 标签必须被正确地关闭，比如 &lt;hr /&gt;。 代码实例 123&lt;p&gt;HTML 是用于描述 web 页面的一种语言。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;CSS 定义如何显示 HTML 元素。&lt;/p&gt; 上述代码效果： HTML 是用于描述 web 页面的一种语言。CSS 定义如何显示 HTML 元素。 1.9 &lt;!–…–&gt;注释 javascript 中 &lt;!– //–> 是做什么用的？ 这是防止某些浏览器，不支持 javascript，导致 javascript 的代码直接出现在页面上，影响美观。因此，用 HTML 的注释把 javascript 的代码包括起来，如果浏览器不支持 javascript，那么也会当做注释处理。尽管 javascript 失效了，但不至于把源代码显示在页面上。 （有些浏览器可能支持 javascript，但也提供用户一个开关，关闭 javascript，如果用户关闭了javascript的功能，也会这样） 123&lt;script type="text/javascript"&gt;&lt;!--XXXXXXXX内容略XXXXX//--&gt;&lt;/script&gt; 代码实例 12&lt;!--这是一个注释，注释在浏览器中不会显示--&gt;&lt;p&gt;这是一个段落&lt;/p&gt; 上述代码效果： 这是一个段落 2、格式缩写词/首字母缩略词 &lt;abbr&gt;&lt;/abbr&gt; 说明 用来表示一个缩写词或者首字母缩略词，如”WWW”或者”NATO”。 通过对缩写词语进行标记，您就能够为浏览器、拼写检查程序、翻译系统以及搜索引擎分度器提供有用的信息。 在某些浏览器中，当您把鼠标移至带有 &lt;abbr&gt; 标签的缩写词/首字母缩略词上时，&lt;abbr&gt; 标签的 title 属性可被用来展示缩写词/首字母缩略词的完整版本。 代码实例 1The&lt;abbr title="World Health Organization"&gt;WHO&lt;/abbr&gt; was founded in 1948. 上述代码效果：TheWHO was founded in 1948. 联系信息 &lt;address&gt;&lt;/address&gt; 说明 如果 &lt;address&gt; 元素位于 &lt;body&gt; 元素内部，则它表示该文档作者/所有者的联系信息。 如果 &lt;address&gt; 元素位于 &lt;article&gt; 元素内部，则它表示该文章作者/所有者的联系信息。 &lt;address&gt; 元素的文本通常呈现为斜体。大多数浏览器会在该元素的前后添加换行。 不应该使用 &lt;address&gt; 标签来描述邮政地址，除非这些信息是联系信息的组成部分。 &lt;address&gt; 元素通常被包含在 &lt;footer&gt; 元素的其他信息中。 2.实例1234567&lt;address&gt;Written by &lt;a href="mailto:webmaster@example.com"&gt;Jon Doe&lt;/a&gt;.&lt;br&gt; Visit us at:&lt;br&gt;Example.com&lt;br&gt;Box 564, Disneyland&lt;br&gt;USA&lt;/address&gt; 上述代码效果： Written by Jon Doe.Visit us at:Example.comBox 564, DisneylandUSA 文本方向 &lt;bdo&gt;&lt;/bdo&gt; 属性|属性|值|描述||–|–|–||dir|ltr|文本方向从左到右||rtl|文本方向从右到左| ps：bdo元素很少使用，只用于某些多语言文档。在这种文档中，可能有某一段文本使用的语言的阅读方式与文档中其他部分使用的语言的阅读方式不同。 实例12&lt;p&gt;该段落文字从左到右显示。&lt;/p&gt; &lt;p&gt;&lt;bdo dir="rtl"&gt;该段落文字从右到左显示。&lt;/bdo&gt;&lt;/p&gt; 上述代码效果： 该段落文字从左到右显示。该段落文字从右到左显示。 脱离父元素文本方向 &lt;bdi&gt;&lt;/bdi&gt;新增 说明 bdi 指的是 bidi 隔离（Bi-directional Isolation）。 &lt;bdi&gt; 标签允许您设置一段文本，使其脱离其父元素的文本方向设置。 在发布用户评论或其他您无法完全控制的内容时，该标签很有用。 实例 123&lt;p&gt;该段落文字从左到右显示。&lt;/p&gt; &lt;p&gt;&lt;bdo dir="rtl"&gt;该段落文字从右到左显示。&lt;/bdo&gt;&lt;/p&gt; &lt;p&gt;&lt;bdo dir="rtl"&gt;该段落文字&lt;bdi&gt;此处脱离仍是从左到右&lt;/bdi&gt;显示。&lt;/bdo&gt;&lt;/p&gt; 上述代码效果： 该段落文字从左到右显示。该段落文字从右到左显示。该段落文字此处脱离仍是从左到右显示。 块引用 &lt;blockquote&gt;&lt;/blockquote&gt; 属性|属性|值|描述||–|–|–||cite|URL|规定引用的来源| 实例 123456这里有一则引用：&lt;blockquote cite="https://panyanyun.github.io/"&gt; &lt;p&gt;blockquote元素中一般嵌套p元素，用于标记被引用的文本，这些引用文本并不是直接位于blockquote元素中。&lt;/p&gt; &lt;p&gt;如果引文来自在线资源（包括自己网站中的其他地方），那么可以在blockquote标签的cite（引用）属性中指明原始来源的URL。&lt;/p&gt; &lt;p&gt;通常浏览器会把blockquote元素呈现为一段左右两侧缩进(40px)的文本。&lt;/p&gt;&lt;/blockquote&gt; 上述代码效果：这里有一则引用： blockquote元素中一般嵌套p元素，用于标记被引用的文本，这些引用文本并不是直接位于blockquote元素中。如果引文来自在线资源（包括自己网站中的其他地方），那么可以在blockquote标签的cite（引用）属性中指明原始来源的URL。通常浏览器会把blockquote元素呈现为一段左右两侧缩进(40px)的文本。 短的引用 &lt;q&gt;&lt;/q&gt; 实例1猜猜我是谁？&lt;q cite="https://panyanyun.github.io/"&gt;我是一个短的引用。&lt;/q&gt; 上述代码效果：猜猜我是谁？我是一个短的引用。 说明 浏览器经常会在这种引用的周围插入引号。 属性|属性 |值 |描述 ||–|–|–||cite |URL|规定引用的源 URL。 | 作品标题/引用 &lt;cite&gt;&lt;/cite&gt; 说明 cite标签定义作品（比如书籍、歌曲、电影、电视节目、绘画、雕塑等等）的标题。人名不属于作品的标题。 按照惯例，引用的文本将以斜体显示。 用cite标签把指向其他文档的引用分离出来，尤其是分离那些传统媒体中的文档，如书籍、杂志、期刊等。如果引用的这些文档有联机版本，最好是把该引用包含于一个a元素中，从而把一个超链接指向该联机版本。 cite标签还有一个隐藏功能：它可以使你或者其他人从文档中自动摘录参考书目。可以很容易想象一个浏览器，它能够自动整理引用表格，并把它们作为脚注或者独立的文档来显示。 实例 1&lt;p&gt;&lt;cite&gt;黑猫警长&lt;/cite&gt; 只有5集。&lt;/p&gt; 上述代码效果： 黑猫警长 只有5集。 电脑代码 &lt;code&gt;&lt;/code&gt; 归纳|标签|用途||–|–||&lt;em&gt; |呈现为被强调的文本。||&lt;strong&gt; |定义重要的文本。 ||&lt;dfn&gt; |定义一个定义项目。||&lt;code&gt; |定义计算机代码文本。||&lt;samp&gt; |定义样本文本。||&lt;kbd&gt; |定义键盘文本。它表示文本是从键盘上键入的。它经常用在与计算机相关的文档或手册中。||&lt;var&gt; |定义变量。可将此标签与 &lt;pre&gt; 及 &lt;code&gt; 标签配合使用。| 实例 1234567&lt;code&gt;一段电脑代码&lt;/code&gt;&lt;br&gt;&lt;em&gt;强调文本&lt;/em&gt;&lt;br&gt;&lt;strong&gt;加粗文本&lt;/strong&gt;&lt;br&gt;&lt;dfn&gt;定义项目&lt;/dfn&gt;&lt;br&gt;&lt;samp&gt;计算机样本&lt;/samp&gt;&lt;br&gt;&lt;kbd&gt;键盘输入&lt;/kbd&gt;&lt;br&gt;&lt;var&gt;变量&lt;/var&gt; 上述代码效果： 一段电脑代码强调文本加粗文本定义项目计算机样本键盘输入变量 变量 &lt;var&gt;&lt;/var&gt;1&lt;var&gt;变量&lt;/var&gt;&lt;br&gt; 上述代码效果： 变量 计算机样本 &lt;samp&gt;&lt;/samp&gt;1&lt;samp&gt;计算机样本&lt;/samp&gt;&lt;br&gt; 上述代码效果： 计算机样本 键盘文本 &lt;kbd&gt;&lt;/kbd&gt;1&lt;kbd&gt;键盘输入&lt;/kbd&gt;&lt;br&gt; 上述代码效果： 键盘输入 定义一个定义项目 &lt;dfn&gt;&lt;/dfn&gt;1&lt;dfn&gt;定义项目&lt;/dfn&gt;&lt;br&gt; 上述代码效果： 定义项目 重要加粗 &lt;strong&gt;&lt;/strong&gt;1&lt;strong&gt;加粗文本&lt;/strong&gt;&lt;br&gt; 上述代码效果： 加粗文本 强调文本 &lt;em&gt;&lt;/em&gt;1&lt;em&gt;强调文本&lt;/em&gt;&lt;br&gt; 上述代码效果： 强调文本 加粗 &lt;b&gt;&lt;/b&gt; 实例1&lt;p&gt;这是一个普通的文本- &lt;b&gt;这是一个加粗文本&lt;/b&gt;。&lt;/p&gt; 上述代码效果： 这是一个普通的文本- 这是一个加粗文本。 斜体 &lt;i&gt;&lt;/i&gt; 实例1&lt;p&gt;有只熊本来好好的，&lt;i&gt;突然都斜了&lt;/i&gt;，原来蜂蜜吃多了&lt;/p&gt; 上述代码效果： 有只熊本来好好的，突然都斜了，原来蜂蜜吃多了 说明 &lt;i&gt;标签被用来表示科技术语、其他语种的成语俗语、想法、宇宙飞船的名字等等。 其他语义的元素如下： &lt;em&gt; （被强调的文本） &lt;strong&gt; （重要的文本） &lt;mark&gt; （被标记的/高亮显示的文本） &lt;cite&gt; （作品的标题） &lt;dfn&gt; （一个定义项目） 小号标注 &lt;small&gt;&lt;/small&gt;1&lt;small&gt;small标签定义小型文本（和旁注）&lt;/small&gt; 上述代码效果：small标签定义小型文本（和旁注） 下标 &lt;sub&gt;&lt;/sub&gt; 实例12&lt;p&gt;这个文本包含 &lt;sub&gt;下标&lt;/sub&gt;文本。&lt;/p&gt;&lt;p&gt;这个文本包含 &lt;sup&gt;上标&lt;/sup&gt; 文本。&lt;/p&gt; 上述代码效果： 这个文本包含 下标文本。这个文本包含 上标 文本。 说明 下标文本能用来表示化学公式，比如 H2O。 上标 &lt;sup&gt;&lt;/sup&gt; 实例12&lt;p&gt;这个文本包含 &lt;sub&gt;下标&lt;/sub&gt;文本。&lt;/p&gt;&lt;p&gt;这个文本包含 &lt;sup&gt;上标&lt;/sup&gt; 文本。&lt;/p&gt; 上述代码效果： 这个文本包含 下标文本。这个文本包含 上标 文本。 说明 上标文本能用来添加脚注，比如 WWW[1]。 预格式文本 &lt;pre&gt; 实例12345&lt;pre&gt;此例演示如何使用 pre 标签对空行和 空格进行控制&lt;/pre&gt; 上述代码效果： 此例演示如何使用 pre 标签 对空行和 空格 进行控制 说明 &lt;pre&gt; 标签可定义预格式化的文本。被包围在 &lt;pre&gt; 标签 元素中的文本通常会保留空格和换行符。而文本也会呈现为等宽字体。 &lt;pre&gt; 标签的一个常见应用就是用来表示计算机的源代码。 pre元素是块级元素，但是只能包含文本或行内元素。也就是说，任何块级元素（常见为可以导致段落断开的标签）都不能位于pre元素中。 pre元素中允许的文本可以包含物理样式和基于内容的样式变化，还有链接、图像和水平分隔线。当把其他标签，比如&lt;a&gt;标签放到&lt;pre&gt;块中时，就像放在HTML/XHTML文档的其他部分中一样即可。 制表符tab在&lt;pre&gt;标签定义的块当中可以起到应有的作用，每个制表符占据8个字符的位置，但并不推荐使用tab，因为在不同的浏览器中，tab的表现形式各不相同。在用&lt;pre&gt;标签格式化的文档段中使用空格，可以确保文本正确的水平位置。 如果希望使用&lt;pre&gt;标签来定义计算机源代码，比如HTML源代码，请使用符号实体来表示特殊字符。一般将&lt;pre&gt;标签与&lt;code&gt;标签结合起来使用，以获得更加精确的语义，用于标记页面中需要呈现的源代码。 如果想要把某一段规定好的文本格式放在HTML中，那么就要利用pre元素的特性。 被插入文本 &lt;ins&gt;&lt;/ins&gt; 实例1&lt;p&gt;你是&lt;del&gt;最胖的&lt;/del&gt; &lt;ins&gt;最棒的&lt;/ins&gt;!&lt;/p&gt; 上述代码效果： 你是最胖的 最棒的! 说明 &lt;del&gt; 和 &lt;ins&gt; 一起使用，描述文档中的更新和修正。 del 在已删除文本上添加一条删除线， ins 在新插入文本下添加一条下划线。 属性 属性 值 描述 cite URL 规定一个文档的 URL，该文档解释了文本被插入的原因 datetime YYYY-MM-DDThh:mm:ssTZD 规定文本被插入的日期和时间 被删除文本 &lt;del&gt;&lt;/del&gt; 实例1&lt;p&gt;你是&lt;del&gt;最胖的&lt;/del&gt; &lt;ins&gt;最棒的&lt;/ins&gt;!&lt;/p&gt; 上述代码效果： 你是最胖的 最棒的! 说明&lt;del&gt; 和 &lt;ins&gt; 一起使用，描述文档中的更新和修正。 del 在已删除文本上添加一条删除线， ins 在新插入文本下添加一条下划线。 属性 属性 值 描述 cite URL 规定一个解释了文本被删除的原因的文档的 URL。 datetime YYYY-MM-DDThh:mm:ssTZD 规定文本被删除的日期和时间。 加删除线 &lt;s&gt;&lt;/s&gt; 实例1&lt;s&gt;你是最胖的！&lt;/s&gt; 不！你是最棒的！ 上述代码效果：你是最胖的！ 不！你是最棒的！ 说明 &lt;s&gt; 标签对那些不正确、不准确或者没有用的文本进行标识。 如果要定义替换的或者删除的文本，请使用 &lt;del&gt;标签。 加下划线 &lt;u&gt;&lt;/u&gt;1&lt;u&gt;请尽量避免使用u为文本加下划线，用户会把它混淆为一个超链接。&lt;/u&gt; 上述代码效果：请尽量避免使用u为文本加下划线，用户会把它混淆为一个超链接。 在文本合适处添加换行 &lt;wbr&gt;新增1&lt;p&gt;如果单词太长，或者您担心浏览器会在错误的位置换行，那么您可以使用wbr元素来添加 &lt;wbr&gt;Word &lt;wbr&gt;Break &lt;wbr&gt;Opportunity（单词换行时机）。&lt;/p&gt; 上述代码效果： 如果单词太长，或者您担心浏览器会在错误的位置换行，那么您可以使用wbr元素来添加 Word Break Opportunity（单词换行时机）。 高亮文本 &lt;mark&gt;&lt;/mark&gt;新增1我被&lt;mark&gt;标记&lt;/mark&gt;了！ 上述代码效果：我被标记了！ 度量衡 &lt;meter&gt;仅用于已知最大和最小值的度量。新增 实例123&lt;meter value="2" min="0" max="10"&gt;2 out of 10&lt;/meter&gt;&lt;br&gt;&lt;meter value="0.6"&gt;60%&lt;/meter&gt;&lt;br&gt;&lt;meter value="0.8" high="0.9" low="0.1" optimum="0.8" min="0" max="1"&gt;&lt;/meter&gt; 上述代码效果： 2 out of 1060% 说明 &lt;meter&gt; 标签定义度量衡。仅用于已知最大和最小值的度量。比如：磁盘使用情况，查询结果的相关性等。 注意：&lt;meter&gt; 不能作为一个进度条来使用， 进度条 &lt;progress&gt; 标签。 属性 属性 值 描述 formNew form_id 规定 &lt;meter&gt; 元素所属的一个或多个表单。 highNew number 规定 被界定为高的值的范围。 lowNew number 规定 被界定为低的值的范围。 maxNew number 规定 范围的最大值。 minNew number 规定 范围的最小值。 optimumNew number 规定 度量的最优值。 valueNew number 必需。规定度量的当前值。 进度条 &lt;progress&gt;&lt;/progress&gt;新增 实例12下载进度：&lt;progress value="50" max="100"&gt;&lt;/progress&gt; 上述代码效果：下载进度： 说明 将 &lt;progress&gt; 标签与 JavaScript 一起使用来显示任务的进度。 注释：&lt;progress&gt; 标签不适合用来表示度量衡（例如，磁盘空间使用情况或相关的查询结果）。表示度量衡，请使用 &lt;meter&gt; 标签代替。 属性 属性 值 描述 max number 规定 需要完成的值。 value number 规定 进程的当前值。 注音 &lt;rt&gt;&lt;/rt&gt;新增 实例1234&lt;ruby&gt;汉 &lt;rt&gt; han &lt;/rt&gt;字 &lt;rt&gt; zi &lt;/rt&gt;&lt;/ruby&gt; 上述代码效果：汉 han 字 zi 说明 &lt;rt&gt; 标签定义字符（中文注音或字符）的解释或发音。 将 &lt;rt&gt; 标签与 &lt;ruby&gt; 和 &lt;rp&gt; 标签一起使用： &lt;ruby&gt; 元素由一个或多个需要解释/发音的字符和一个提供该信息的 &lt;rt&gt; 元素组成，还包括可选的 &lt;rp&gt; 元素，定义当浏览器不支持 “ruby” 元素时显示的内容。 不支持 ruby 元素的浏览器所显示的内容 &lt;rp&gt;&lt;/rp&gt;新增 实例1234&lt;ruby&gt; 汉 &lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;han&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; 字 &lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;zi&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 上述代码效果： 汉 (han) 字 (zi) 说明 ruby 注释是中文注音或字符。 将 &lt;rp&gt; 标签与 &lt;ruby&gt; 和 &lt;rt&gt; 标签一起使用： &lt;ruby&gt; 元素由一个或多个需要解释/发音的字符和一个提供该信息的 &lt;rt&gt; 元素组成，还包括可选的 &lt;rp&gt; 元素，定义当浏览器不支持 “ruby” 元素时显示的内容。 注释（中文注音或字符） &lt;ruby&gt;&lt;/ruby&gt;新增 实例1234&lt;ruby&gt; 中&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;zhong&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; 国&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;guo&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 上述代码效果： 中(zhong) 国(guo) 说明 &lt;ruby&gt; 标签定义 ruby 注释（中文注音或字符）。在东亚使用，显示的是东亚字符的发音。 将 &lt;ruby&gt; 标签与 &lt;rt&gt; 和 &lt;rp&gt; 标签一起使用： &lt;ruby&gt; 元素由一个或多个需要解释/发音的字符和一个提供该信息的 &lt;rt&gt; 元素组成，还包括可选的 &lt;rp&gt; 元素，定义当浏览器不支持 “ruby” 元素时显示的内容。 日期/时间 &lt;time&gt;&lt;/time&gt;新增 实例12&lt;p&gt;我们在每天早上 &lt;time&gt;9:00&lt;/time&gt; 开始营业。&lt;/p&gt;&lt;p&gt;我在 &lt;time datetime="2016-02-14"&gt;情人节&lt;/time&gt; 有个约会。&lt;/p&gt; 上述代码效果： 我们在每天早上 9:00 开始营业。我在 情人节 有个约会。 说明 &lt;time&gt; 标签定义公历的时间（24 小时制）或日期，时间和时区偏移是可选的。 该元素能够以机器可读的方式对日期和时间进行编码，这样，举例说，用户代理能够把生日提醒或排定的事件添加到用户日程表中，搜索引擎也能够生成更智能的搜索结果。 属性 属性 值 描述 datetime datetime 规定日期/时间。另一种方式，则是由元素的内容给定日期/时间。 pubdate datetime 指示 &lt;time&gt; 元素中的日期 / 时间是文档（或最近的前辈 &lt;article&gt; 元素）的发布日期 加删除线 &lt;strike&gt;&lt;/strike&gt; HTML5不再支持。 实例1&lt;p&gt;Version 2.0 is &lt;strike&gt;not yet available!&lt;/strike&gt; now available!&lt;/p&gt; 上述代码效果： Version 2.0 is not yet available! now available! 属性 属性 值 描述 class classname 规定元素的类名 dir rtl 规定元素中内容的文本方向 ltr id id 规定元素的唯一 id lang language_code 规定元素中内容的语言代码 style style_definition 规定元素的行内样式 title text 规定元素的额外信息 字体、尺寸、颜色 &lt;font&gt;&lt;/font&gt; HTML5不再支持。 实例123&lt;font size="3" color="red"&gt;这是一些文本!&lt;/font&gt;&lt;font size="2" color="blue"&gt;这是一些文本!&lt;/font&gt;&lt;font face="verdana" color="green"&gt;这是一些文本!&lt;/font&gt; 上述代码效果： 这是一些文本!这是一些文本!这是一些文本! 可选的属性 属性 值 描述 color rgb(x,x,x) #xxxxxx HTML5 不支持。HTML 4.01 已废弃。 规定文本的颜色。 colorname face font_family HTML5 不支持。HTML 4.01 已废弃。 规定文本的字体。 size number HTML5 不支持。HTML 4.01 已废弃。 规定文本的尺寸。 标准属性 在 HTML 4.01 中， 标签支持如下标准属性： 属性 值 描述 class classname 规定元素的类名 dir rtl 规定元素中内容的文本方向，从右到左 ltr 文本方向从左到右 id id 规定元素的唯一 id lang language_code 规定元素中内容的语言代码 style style_definition 规定元素的行内样式 title text 规定元素的额外信息 打字机文本 &lt;tt&gt;&lt;/tt&gt; HTML5不再支持。12&lt;p&gt;这个文本是正常的。&lt;/p&gt;&lt;p&gt;&lt;tt&gt;这个文本是打字机文本。&lt;/tt&gt;&lt;/p&gt; 上述代码效果： 这个文本是正常的。这个文本是打字机文本。 3、表单表单 &lt;form&gt;&lt;/form&gt; 实例1234567891011121314151617181920&lt;form action=""&gt; &lt;fieldset&gt; &lt;legend&gt;这是表单的名字:&lt;/legend&gt; 你的名字: &lt;input type="text" name="name" value="小胖"&gt;&lt;br&gt; 您的爱好：&lt;br&gt; &lt;input type="checkbox" name="aihao" value="电影"&gt; 电影&lt;br&gt; &lt;input type="checkbox" name="aihao" value="零食" checked="checked"&gt;零食&lt;br&gt; 您的性别：&lt;br&gt; &lt;input type="radio" name="sex" value="男"&gt; 男&lt;br&gt; &lt;input type="radio" name="sex" value="女" checked="checked"&gt; 女&lt;br&gt; &lt;select name="food"&gt; &lt;option value="milk"&gt;牛奶&lt;/option&gt; &lt;option value="mianbao"&gt;面包&lt;/option&gt; &lt;option value="dabing" selected&gt;大饼&lt;/option&gt; &lt;option value="youtiao"&gt;油条&lt;/option&gt; &lt;/select&gt; &lt;input type="submit" value="提交"&gt; &lt;/fieldset&gt;&lt;/form&gt; 上述代码效果： 这是表单的名字:你的名字:您的爱好： 电影零食您的性别： 男 女牛奶面包大饼油条 说明 多数情况下被用到的表单标签是输入标签（&lt;input&gt;）。 输入类型是由类型属性（type）定义的。 文本域: type=”text” 密码字段: type=”password” 单选框: type=”radio” 复选框: type=”checkbox” 提交按钮: type=”submit” 下拉列表：&lt;select&gt;&lt;option&gt;下拉项&lt;/option&gt;&lt;/select&gt; 定义重置：type=”reset” checked=”checked”表示单选框或复选框中的默认选项 属性 标签 描述 &lt;input&gt; 定义 输入域 &lt;textarea&gt; 定义 文本域 (一个多行的输入控件) &lt;label&gt; 定义了 &lt;input&gt; 元素的标签，一般为输入标题 &lt;fieldset&gt; 定义了 一组相关的表单元素，并使用外框包含起来 &lt;legend&gt; 定义了 &lt;fieldset&gt; 元素的标题 &lt;select&gt; 定义了 下拉选项列表 &lt;optgroup&gt; 定义 选项组 &lt;option&gt; 定义 下拉列表中的选项 &lt;button&gt; 定义 一个点击按钮 &lt;datalist&gt; 指定一个预先定义的输入控件选项列表 &lt;keygen&gt; 定义了 表单的密钥对生成器字段 &lt;output&gt; 定义 一个计算结果 输入控件 &lt;input&gt; 属性 值 描述 accept audio/ video/ image/* MIME_type 规定通过文件上传来提交的文件的类型。 (只针对type=”file”) align left right top middle bottom HTML5已废弃，不赞成使用。规定图像输入的对齐方式。 (只针对type=”image”) alt text 定义图像输入的替代文本。 (只针对type=”image”) autocomplete on off autocomplete 属性规定 &lt;input&gt; 元素输入字段是否应该启用自动完成功能。 autofocus autofocus 属性规定当页面加载时 &lt;input&gt; 元素应该自动获得焦点。 checked checked checked 属性规定在页面加载时应该被预先选定的 &lt;input&gt; 元素。 (只针对 type=”checkbox” 或者 type=”radio”) disabled disabled disabled 属性规定应该禁用的 &lt;input&gt; 元素。 form form_id form 属性规定 &lt;input&gt; 元素所属的一个或多个表单。 formaction URL 属性规定当表单提交时处理输入控件的文件的 URL。(只针对 type=”submit” 和 type=”image”) formenctype application/x-www-form-urlencoded multipart/form-data text/plain 属性规定当表单数据提交到服务器时如何编码(只适合 type=”submit” 和 type=”image”)。 formmethod get post 定义发送表单数据到 action URL 的 HTTP 方法。 (只适合 type=”submit” 和 type=”image”) formnovalidate formnovalidate formnovalidate 属性覆盖 &lt;form&gt; 元素的 novalidate 属性。 formtarget _blank _self _parent _top framename 规定表示提交表单后在哪里显示接收到响应的名称或关键词。(只适合 type=”submit” 和 type=”image”) height pixels 规定 &lt;input&gt;元素的高度。(只针对type=”image”) list datalist_id 属性引用 &lt;datalist&gt; 元素，其中包含 &lt;input&gt; 元素的预定义选项。 max number date 属性规定 &lt;input&gt; 元素的最大值。 maxlength number 属性规定 &lt;input&gt; 元素中允许的最大字符数。 min number date 属性规定 &lt;input&gt;元素的最小值。 multiple multiple 属性规定允许用户输入到 &lt;input&gt; 元素的多个值。 name text name 属性规定 &lt;input&gt; 元素的名称。 pattern regexp pattern 属性规定用于验证 &lt;input&gt; 元素的值的正则表达式。 placeholder text placeholder 属性规定可描述输入 &lt;input&gt; 字段预期值的简短的提示信息 。 readonly readonly readonly 属性规定输入字段是只读的。 required required 属性规定必需在提交表单之前填写输入字段。 size number size 属性规定以字符数计的 &lt;input&gt; 元素的可见宽度。 src URL src 属性规定显示为提交按钮的图像的 URL。 (只针对 type=”image”) step number step 属性规定 &lt;input&gt; 元素的合法数字间隔。 type button checkbox color date datetime datetime-local email file hidden image month number password radio range reset search submit tel text time url week type 属性规定要显示的 &lt;input&gt; 元素的类型。 value text 指定 &lt;input&gt; 元素 value 的值。 width pixels width 属性规定 &lt;input&gt; 元素的宽度。 (只针对type=”image”) 文本域 &lt;textarea&gt;&lt;/textarea&gt; 属性 值 描述 autofocus autofocus 规定当页面加载时，文本区域自动获得焦点。 cols number 规定文本区域内可见的宽度。 disabled disabled 规定禁用文本区域。 form form_id 定义文本区域所属的一个或多个表单。 maxlength number 规定文本区域允许的最大字符数。 name text 规定文本区域的名称。 placeholder text 规定一个简短的提示，描述文本区域期望的输入值。 readonly readonly 规定文本区域为只读。 required required 规定文本区域是必需的/必填的。 rows number 规定文本区域内可见的行数。 wrap hard 在表单提交时，textarea 中的文本换行（包含换行符）。当使用 “hard” 时，必须指定 cols 属性。 soft 在表单提交时，textarea 中的文本不换行。默认。 &lt;button&gt;&lt;/button&gt; 定义按钮。 1&lt;button type=&quot;button&quot;&gt;点我!&lt;/button&gt; 上述代码效果： 点我! 在 &lt;button&gt; 元素内部，可放置内容，比如文本或图像。这是其与&lt;input&gt; 元素创建按钮的不同之处。 须为 &lt;button&gt; 元素规定 type 属性。不同的浏览器对 &lt;button&gt; 元素的 type 属性使用不同的默认值。 注：在 HTML 表单中，建议使用 &lt;input&gt; 创建按钮。 &lt;select&gt;&lt;/select&gt; 定义选择列表（下拉列表）。 1234&lt;select disabled&gt;&lt;option value=&quot;volvo&quot;&gt;Volvo&lt;/option&gt;&lt;option value=&quot;saab&quot;&gt;Saab&lt;/option&gt;&lt;/select&gt; 上述代码效果： VolvoSaabMercedesAudi 属性 值 描述 autofocus autofocus 规定在页面加载时下拉列表自动获得焦点。 disabled disabled 当该属性为 true 时，会禁用下拉列表。 form form_id 定义 select 字段所属的一个或多个表单。 multiple multiple 当该属性为 true 时，可选择多个选项。 name text 定义下拉列表的名称。 required required 规定用户在提交表单前必须选择一个下拉列表中的选项。 size number 规定下拉列表中可见选项的数目。 &lt;optgroup&gt;&lt;/optgroup&gt; 定义选择列表中相关选项的组合。 12345678910&lt;select&gt; &lt;optgroup label=&quot;Swedish Cars&quot;&gt; &lt;option value=&quot;volvo&quot;&gt;Volvo&lt;/option&gt; &lt;option value=&quot;saab&quot;&gt;Saab&lt;/option&gt; &lt;/optgroup&gt; &lt;optgroup label=&quot;German Cars&quot;&gt; &lt;option value=&quot;mercedes&quot;&gt;Mercedes&lt;/option&gt; &lt;option value=&quot;audi&quot;&gt;Audi&lt;/option&gt; &lt;/optgroup&gt;&lt;/select&gt; 上述代码效果： VolvoSaabMercedesAudi &lt;optgroup&gt; 标签经常用于把相关的选项组合在一起。如果你有很多的选项组合, 你可以使用&lt;optgroup&gt; 标签能够很简单的将相关选项组合在一起。 属性 值 描述 disabled disabled 规定禁用该选项组。 label text 为选项组规定描述。 &lt;option&gt;&lt;/option&gt; 定义选择列表中的选项。 123456&lt;select&gt; &lt;option value=&quot;volvo&quot;&gt;Volvo&lt;/option&gt; &lt;option value=&quot;saab&quot;&gt;Saab&lt;/option&gt; &lt;option value=&quot;opel&quot;&gt;Opel&lt;/option&gt; &lt;option value=&quot;audi&quot;&gt;Audi&lt;/option&gt;&lt;/select&gt; 上述代码效果： Volvo Saab Opel Audi The &lt;option&gt; 标签定义下拉列表中的一个选项（一个条目）。 &lt;option&gt; 标签中的内容作为 &lt;select&gt; 或者&lt;datalist&gt; 一个元素使用。 如果列表选项很多，可以使用 &lt;optgroup&gt; 标签对相关选项进行组合。 属性 值 描述 disabled disabled 规定此选项应在首次加载时被禁用。 label text 定义当使用 &lt;optgroup&gt; 时所使用的标注。 selected selected 规定选项（在首次显示在列表中时）表现为选中状态。 value text 定义送往服务器的选项值。 定义input元素的标注 &lt;label&gt;&lt;/label&gt; 标签定义及使用说明: 此标签为 input 元素定义标注（标记）。 当用户选择该标签时，浏览器就会自动将焦点转到和标签相关的表单控件上。 “for” 属性可把 label 绑定到另外一个元素。须把 “for” 属性设置为与相关元素的 id 属性相同值。 属性 属性 值 描述 for element_id 规定 label 与哪个表单元素绑定。 form form_id 规定 label 字段所属的一个或多个表单。 代码实例 1234567&lt;form action="demo_form.php"&gt; &lt;label for="male"&gt;Male&lt;/label&gt; &lt;input type="radio" name="sex" id="male" value="male"&gt;&lt;br&gt; &lt;label for="female"&gt;Female&lt;/label&gt; &lt;input type="radio" name="sex" id="female" value="female"&gt;&lt;br&gt;&lt;br&gt; &lt;input type="submit" value="提交"&gt;&lt;/form&gt; 上述代码效果： MaleFemale 表单边框 &lt;fieldset&gt;&lt;/fieldset&gt; 标签定义及使用说明: 此标签可以将表单内的相关元素分组。会在相关表单元素周围绘制边框。 &lt;legend&gt; 标签为 &lt;fieldset&gt; 元素定义标题。 属性 属性 值 描述 disabled disabled 规定该组中的相关表单元素应该被禁用。 form form_id 规定 fieldset 所属的一个或多个表单。 name text 规定 fieldset 的名称。 代码实例 12345678&lt;form&gt; &lt;fieldset&gt; &lt;legend&gt;Personalia:&lt;/legend&gt; Name: &lt;input type="text"&gt;&lt;br&gt; Email: &lt;input type="text"&gt;&lt;br&gt; Date of birth: &lt;input type="text"&gt; &lt;/fieldset&gt;&lt;/form&gt; 上述代码效果： Personalia: Name: Email: Date of birth: 表单边框的标题 &lt;legend&gt;&lt;/legend&gt;详见fieldset 元素 输入时可能的选项列表。&lt;datalist&gt;&lt;/datalist&gt;新增 标签定义及使用说明: 标签被用来在为 &lt;input&gt; 元素提供”自动完成”的特性。用户能看到一个下拉列表，里边的选项是预先定义好的，将作为用户的输入数据。 使用 &lt;input&gt; 元素的 list 属性来绑定 &lt;datalist&gt; 元素。 代码实例 12345678&lt;input list="browsers"&gt;&lt;datalist id="browsers"&gt;&lt;option value="Internet Explorer"&gt;&lt;option value="Firefox"&gt;&lt;option value="Chrome"&gt;&lt;option value="Opera"&gt;&lt;option value="Safari"&gt;&lt;/datalist&gt; 上述代码效果： 表单的密钥对生成器字段 &lt;keygen&gt;新增 标签定义及使用说明: &lt;keygen&gt; 标签规定用于表单的密钥对生成器字段。 当提交表单时，私钥存储在本地，公钥发送到服务器。 属性 属性 值 描述 autofocus autofocus 使 字段在页面加载时获得焦点。 challenge challenge 如果使用，则将 keygen 的值设置为在提交时询问。 disabled disabled 禁用 元素字段。 form form_id 定义该 字段所属的一个或多个表单。 keytype rsa 默认。规定 RSA 安全算法。RSA 密钥强度可由用户选择。 dsa 规定 DSA 安全算法。DSA 密钥长度可由用户选择。 ec 规定 EC 安全算法。EC 密钥强度可由用户选择。 name name 定义 元素的唯一名称。 name 属性用于在提交表单时搜集字段的值。 代码实例 12345&lt;form action="demo_keygen.html" method="get"&gt;Username: &lt;input type="text" name="usr_name"&gt;Encryption: &lt;keygen name="security" autofocus&gt;&lt;input type="submit"&gt;&lt;/form&gt; 上述代码效果： Username: Encryption: 定义一个计算的结果 &lt;output&gt;&lt;/output&gt;新增 标签定义及使用说明: 作为计算结果输出显示(比如执行脚本的输出)。 属性 属性 值 描述 for element_id 描述计算中使用的元素与计算结果之间的关系。 form form_id 定义输入字段所属的一个或多个表单。 name name 定义对象的唯一名称（表单提交时使用）。 代码实例 12345&lt;form oninput="x.value=parseInt(a.value)+parseInt(b.value)"&gt;0&lt;input type="range" id="a" value="50"&gt;100+&lt;input type="number" id="b" value="50"&gt;=&lt;output name="x" for="a b"&gt;100&lt;/output&gt;&lt;/form&gt; 上述代码效果： 0 100 + =100 4、框架&lt;frameset&gt;&lt;/frameset&gt; 框架集。HTML5不再支持。 说明 &lt;frameset&gt; 标签定义一个框架集。 &lt;frameset&gt; 元素被用来组织一个或者多个 &lt;frame&gt; 元素。每个 &lt;frame&gt; 有各自独立的文档。 &lt;frameset&gt; 元素规定在框架集中存在多少列或多少行，以及每行每列占用的百分比/像素。 如果希望验证包含框架的页面，确保 &lt;!DOCTYPE&gt; 被设置为 “HTML Frameset DTD” 或者 “XHTML Frameset DTD” 。 可选属性 属性 值 描述 cols (列) pixels 列尺寸，以像素计（比如 “100px” 或者只是 “100”） % 列尺寸，以可用空间的百分比计（比如 “50%”） * 可用空间的剩余部分将会分配给该列 rows (行) pixels 行高度，以像素计 % 行高度，以可用空间的百分比计 * 可用空间的剩余部分将会分配给该行 - cols 属性规定 &amp;lt;frameset&gt; 中列的尺寸和数量，各宽度以逗号分隔。 - rows 属性规定 &amp;lt;frameset&gt; 中行的尺寸和数量，各高度以逗号分隔。 标准属性 属性 值 描述 class classname 规定元素的类名 id id 规定元素的唯一 id style style_definition 规定元素的行内样式 title text 规定元素的额外信息 事件属性 属性 值 描述 onload script 当文档被载入时执行脚本 onunload script 当文档被卸下时执行脚本 代码实例12345&lt;frameset cols="25%,*,25%"&gt; &lt;!--三列框架--&gt; &lt;frame src="frame_a.htm"&gt; &lt;frame src="frame_b.htm"&gt; &lt;frame src="frame_c.htm"&gt;&lt;/frameset&gt; 12345&lt;frameset rows="25%,*,25%"&gt; &lt;!--三行框架--&gt; &lt;frame src="frame_a.htm"&gt; &lt;frame src="frame_b.htm"&gt; &lt;frame src="frame_c.htm"&gt;&lt;/frameset&gt; 1234567&lt;frameset rows="50%,50%"&gt; &lt;!--混合框架--&gt; &lt;frame src="frame_a.htm"&gt; &lt;frameset cols="25%,75%"&gt; &lt;frame src="frame_b.htm"&gt; &lt;frame src="frame_c.htm"&gt; &lt;/frameset&gt;&lt;/frameset&gt; &lt;frame&gt; 框架集的窗口或框架。 说明 &lt;frame&gt; 标签定义 &lt;frameset&gt; 中的子窗口（框架）。 &lt;frameset&gt; 中的每个 &lt;frame&gt; 都可以设置不同的属性，比如 border、scrolling, noresize 等等。 HTML中，&lt;frame&gt; 没有结束标签。但 XHTML 中，&lt;frame&gt; 标签必须被正确地关闭。 可选属性 属性 值 描述 frameborder 0 无边框 1 显示框架周围的边框（默认） longdesc URL 规定描述框架内容的页面的 URL marginheight pixels 规定框架的上方和下方的边距。 marginwidth pixels 规定框架的左侧和右侧的边距。 name name 规定框架的名称。 noresize noresize 用户无法调整框架的大小 scrolling yes 始终显示滚动条（即使不需要） no 从不显示滚动条（即使需要） auto 在需要时显示滚动条（默认） src URL 规定在框架中显示的文档的 URL。 代码实例12345&lt;frameset cols="50%,*,25%"&gt; &lt;frame src="frame_a.htm" noresize="noresize"&gt; &lt;!--锁定该列边框，用户无法拖动调整其宽度--&gt; &lt;frame src="frame_b.htm"&gt; &lt;frame src="frame_c.htm"&gt;&lt;/frameset&gt; &lt;noframes&gt;&lt;/noframes&gt; 针对不支持框架的用户的替代内容。 说明 &lt;noframes&gt; 元素可为那些不支持框架的浏览器显示文本。noframes 元素位于 frameset 元素内部。 &lt;noframes&gt; 元素插入在 &lt;frameset&gt; 元素中使用。 代码实例 123456&lt;frameset cols="25%,50%,25%"&gt; &lt;frame src="frame_a.htm"&gt; &lt;frame src="frame_b.htm"&gt; &lt;frame src="frame_c.htm"&gt; &lt;noframes&gt;很抱歉，您的游览器不支持&lt;/noframes&gt; &lt;!--遇到不支持此框架的浏览器就显示这句话--&gt;&lt;/frameset&gt; &lt;iframe&gt;&lt;/iframe&gt; 定义内联框架。 说明 &lt;iframe&gt; 标签规定一个内联框架。 一个内联框架被用来在当前 HTML 文档中嵌入另一个文档。 可把需要的文本放置在 &lt;iframe&gt; 和 &lt;/iframe&gt; 之间，这样就可以应对不支持 &lt;iframe&gt; 的浏览器。 使用 CSS 可为 &lt;iframe&gt; （包括滚动条）定义样式。 属性 属性 值 描述 align left 向左对齐 iframe right 向右对齐 iframe top 居中对齐 iframe middle 在顶部对齐 iframe bottom 在底部对齐 iframe frameborder 1 默认。开启边框 0 关闭边框 height pixels 高度。以像素计（比如 “100px”） longdesc URL 描述 &lt;iframe&gt; 内容的页面的 URL marginheight pixels 规定 &lt;iframe&gt; 的顶部和底部的边距。 marginwidth pixels 规定 &lt;iframe&gt; 的左侧和右侧的边距。 name name 规定 &lt;iframe&gt; 的名称。 sandbox “” 启用所有限制条件 allow-forms 允许表单提交 allow-same-origin 允许将内容作为普通来源对待。如果未使用该关键字，嵌入的内容将被视为一个独立的源 allow-scripts 允许脚本执行 allow-top-navigation 嵌入的页面的上下文可以导航（加载）内容到顶级的浏览上下文环境（browsing context）。如果未使用该关键字，这个操作将不可用 scrolling yes 始终显示滚动条，即时不需要 no 从不显示滚动条，即使需要 auto 需要时出现滚动条（默认） seamless seamless 布尔属性，使iframe&gt;看起来像是父文档的一部分（没有边框和滚动条） src URL 规定在 &lt;iframe&gt; 中显示的文档的 URL。 srcdoc HTML_code 要显示在 iframe 中的 HTML 内容。必需是有效的 HTML 语法 width pixels 以像素为单位的宽度 实例123&lt;iframe src="https://panyanyun.github.io"&gt; &lt;p&gt;您的浏览器不支持 iframe 标签。&lt;/p&gt;&lt;/iframe&gt; 12&lt;iframe src="http://www.runoob.com/" width="200" height="200" align="right"&gt;&lt;/iframe&gt; 5、图像&lt;img&gt; 定义图像。 说明 &lt;img&gt; 标签定义 HTML 页面中的图像。 两个必需的属性：src 和 alt。 从技术上讲，图像并不会插入 HTML 页面中，而是链接到 HTML 页面上。img标签的作用是为被引用的图像创建占位符。 通过在 &lt;a&gt; 标签中嵌套 &lt;img&gt; 标签，给图像添加到另一个文档的链接。 代码实例 1&lt;img src="图片url" alt="替代文本" width="42" height="42" align="middle" vspace="50" border="5" ismap&gt; 123456&lt;img src="img/planets.gif" width="145" height="126" alt="Planets" usemap="#planetmap"&gt;&lt;map name="planetmap"&gt; &lt;area shape="rect" coords="0,0,82,126" href="img/sun.gif" alt="Sun"&gt; &lt;area shape="circle" coords="90,58,3" href="img/merglobe.gif" alt="Mercury"&gt; &lt;area shape="circle" coords="124,58,8" href="img/venglobe.gif" alt="Venus"&gt;&lt;/map&gt; 代码效果：（试试点击太阳或其他行星） 属性 align：top、bottom、middle、left、right，设置图片的排列方式 alt：text 图像的替代文本。 crossorigin：anonymous、use-credentials，设置图像的跨域属性 usemap：#mapname，将图像定义为客户器端图像映射。 usemap 属性将图像定义为客户端图像映射（图像映射指的是带有可点击区域的图像）。 usemap 属性与 map 元素的 name 或 id 属性相关联，以建立 img 与 map 之间的关系。 只有当 img 元素不属于 a 或 button 元素的后代时，才允许使用 usemap 属性。 ismap：ismap，将图像规定为服务器端图像映射。 ismap 属性是一个布尔属性。 ismap 属性将图像定义为服务器端图像映射（图像映射指的是带有可点击区域的图像）。 当点击一个服务器端图像映射时，点击坐标会以 URL 查询字符串的形式发送到服务器。 只有当 img元素属于带有有效 href 属性的 a元素的后代时，才允许使用 ismap 属性。 longdesc：URL，指向包含长的图像描述文档的URL。 src：URL，规定显示图像的URL。 width：pixels 宽度 height：pixels 高度。 hspace：pixels 图像左侧和右侧的空白 vspace：pixels 图像顶部和底部的空白 &lt;map&gt;&lt;/map&gt; 定义图像映射。 说明 &lt;map&gt; 标签用于客户端图像映射。图像映射指带有可点击区域的一幅图像。 &lt;img&gt;中的 usemap 属性可引用 &lt;map&gt; 中的 id 或 name 属性（取决于浏览器），所以我们应同时向 &lt;map&gt; 添加 id 和 name 属性。 area 元素永远嵌套在 map 元素内部。area 元素可定义图像映射中的区域。 属性 属性 值 描述 name mapname 必需。为 image-map 规定的名称。 &lt;area&gt; 定义图像地图内部的区域。 说明 &lt;area&gt; 标签定义图像映射内部的区域（图像映射指的是带有可点击区域的图像）。 &lt;area&gt; 元素始终嵌套在 &lt;map&gt; 标签内部。 &lt;img&gt; 标签中的 usemap 属性与 &lt;map&gt; 元素中的 name 相关联，以创建图像与映射之间的关系。 属性 属性 值 描述 alt text 规定区域的替代文本。如果使用 href 属性，则该属性是必需的。 coords coordinates 规定区域的坐标。 href URL 规定区域的目标 URL。 hreflang language_code 规定目标 URL 的语言。 media media query 规定目标 URL 是为何种媒介/设备优化的。默认：all。 nohref value 规定没有相关链接的区域。 rel alternate 规定当前文档与目标 URL 之间的关系。 author bookmark help license next nofollow noreferrer prefetch prev search tag shape default 规定区域的形状。 rect circle poly target _blank 规定在何处打开目标 URL。 _parent _self _top framename type MIME_type 规定目标 URL 的 MIME 类型。 &lt;canvas&gt;&lt;/canvas&gt; 通过脚本（通常是 JavaScript）来绘制图形（比如图表和其他图像）。 说明 &lt;canvas&gt; 标签通过脚本（通常是 JavaScript）来绘制图形（比如图表和其他图像）。 &lt;canvas&gt; 标签只是图形容器，您必须使用脚本来绘制图形。 属性 属性 值 描述 height pixels 规定画布的高度。 width pixels 规定画布的宽度。 实例 123456789//通过 &lt;canvas&gt; 元素来显示一个红色的矩形：&lt;canvas id="myCanvas"&gt;&lt;/canvas&gt; &lt;script type="text/javascript"&gt; var canvas=document.getElementById('myCanvas'); var ctx=canvas.getContext('2d'); ctx.fillStyle='#FF0000'; ctx.fillRect(0,0,80,100);&lt;/script&gt; 效果： var canvas=document.getElementById(‘myCanvas’); var ctx=canvas.getContext(‘2d’); ctx.fillStyle=’#FF0000’; ctx.fillRect(0,0,80,100); &lt;figcaption&gt;&lt;/figcaption&gt; 定义一个 caption for a &lt;figure&gt; element 说明 &lt;figcaption&gt; 标签为 &lt;figure&gt; 元素定义标题。 &lt;figcaption&gt; 元素应该被置于 &lt;figure&gt; 元素的第一个或最后一个子元素的位置。 实例 123456&lt;!--使用 &lt;figure&gt; 元素标记文档中的一个图像。&lt;figure&gt; 元素带有一个标题：--&gt;&lt;figure&gt; &lt;img src="img_pulpit.jpg" alt="The Pulpit Rock" width="304" height="228"&gt; &lt;figcaption&gt;Fig1. - A view of the pulpit rock in Norway.&lt;/figcaption&gt;&lt;/figure&gt; 效果： Fig1. - A view of the pulpit rock in Norway. &lt;figure&gt;&lt;/figure&gt; 对元素进行组合。 &lt;figure&gt; 标签规定独立的流内容（图像、图表、照片、代码等等）。 &lt;figure&gt; 元素的内容应该与主内容相关，同时元素的位置相对于主内容是独立的。如果被删除，则不应对文档流产生影响。 6、Audio/Video&lt;audio&gt;&lt;/audio&gt; 定义声音，比如音乐或其他音频流。 说明 &lt;audio&gt; 标签定义声音，比如音乐或其他音频流。 目前，&lt;audio&gt; 元素支持的3种文件格式：MP3、Wav、Ogg。 属性 属性 值 描述 autoplay autoplay 如果出现该属性，则音频在就绪后马上播放。 controls controls 如果出现该属性，则向用户显示音频控件（比如播放/暂停按钮）。 loop loop 如果出现该属性，则每当音频结束时重新开始播放。 muted muted 如果出现该属性，则音频输出为静音。 preload auto 当页面加载后载入整个音频 metadata 当页面加载后只载入元数据 none 当页面加载后不载入音频 src URL 规定音频文件的 URL。 实例 12345&lt;audio controls preload="none"&gt; &lt;source src="horse.ogg" type="audio/ogg"&gt; &lt;source src="horse.mp3" type="audio/mpeg"&gt; 您的浏览器不支持 audio 元素。&lt;/audio&gt; 效果： 您的浏览器不支持 audio 元素。 &lt;source&gt; 定义media元素 (&lt;video&gt; 和 &lt;audio&gt;)的媒体资源。 说明 &lt;source&gt; 标签为媒体元素（比如 &lt;video&gt; 和 &lt;audio&gt;）定义媒体资源。 &lt;source&gt; 标签允许您规定两个视频/音频文件共浏览器根据它对媒体类型或者编解码器的支持进行选择。 属性 属性 值 描述 media media_query 规定媒体资源的类型，供浏览器决定是否下载。 src URL 规定媒体文件的 URL。 type MIME_type 规定媒体资源的 MIME 类型。 实例 1234567&lt;video width="320" height="240" controls&gt;&lt;source src="movie.mp4" type="video/mp4" media="screen and (min-width:320px)"&gt;&lt;source src="movie.ogg" type="video/ogg" media="screen and (min-width:320px)"&gt;您的浏览器不支持 video 标签。&lt;/video&gt;注意:目前所有主流浏览器都不支持 media 属性。 &lt;track&gt; 为媒体(&lt;video&gt; 和 &lt;audio&gt;)元素定义外部文本轨道。 说明 &lt;track&gt; 标签为媒体元素（比如 &lt;audio&gt; and &lt;video&gt;）规定外部文本轨道。 这个元素用于规定字幕文件或其他包含文本的文件，当媒体播放时，这些文件是可见的。 属性 属性 值 描述 default default 规定该轨道是默认的。如果用户没有选择任何轨道，则使用默认轨道。 kind captions 该轨道定义将在播放器中显示的简短说明 chapters 该轨道定义章节，用于导航媒介资源 descriptions 该轨道定义描述，用于通过音频描述媒介的内容，假如内容不可播放或不可见 metadata 该轨道定义脚本使用的内容 subtitles 该轨道定义字幕，用于在视频中显示字幕 label text 规定文本轨道的标签和标题。 src URL 必需的。规定轨道文件的 URL。 srclang language_code 规定轨道文本数据的语言。如果 kind 属性值是 “subtitles”，则该属性是必需的。 实例 12345678&lt;video width="320" height="240" controls&gt; &lt;source src="forrest_gump.mp4" type="video/mp4"&gt; &lt;source src="forrest_gump.ogg" type="video/ogg"&gt; &lt;track src="subtitles_en.vtt" kind="subtitles" srclang="en" label="English"&gt; &lt;track src="subtitles_no.vtt" kind="subtitles" srclang="no" label="Norwegian"&gt;&lt;/video&gt; &lt;video&gt;&lt;/video&gt; 定义一个音频或者视频 说明 &lt;video&gt; 标签定义视频，比如电影片段或其他视频流。 目前，&lt;video&gt; 元素支持三种视频格式：MP4、WebM、Ogg。 属性 |属性 |值 |描述 ||autoplay |autoplay |如果出现该属性，则视频在就绪后马上播放。 ||controls |controls |如果出现该属性，则向用户显示控件，比如播放按钮。 ||height |pixels |设置视频播放器的高度。 ||loop |loop |如果出现该属性，则当媒介文件完成播放后再次开始播放。 ||muted |muted |如果出现该属性，视频的音频输出为静音。 ||poster |URL |规定视频正在下载时显示的图像，直到用户点击播放按钮。 ||preload |auto |如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 “autoplay”，则忽略该属性。|| |metadata | || |none |||src |URL |要播放的视频的 URL。 ||width |pixels |设置视频播放器的宽度。 | 实例12345&lt;video width="320" height="240" controls&gt; &lt;source src="movie.mp4" type="video/mp4"&gt; &lt;source src="movie.ogg" type="video/ogg"&gt; 您的浏览器不支持 video 标签。&lt;/video&gt; 7、链接&lt;a&gt; 定义一个链接 说明 a 标签定义超链接，用于从一个页面链接到另一个页面。 a 元素最重要的属性是 href 属性，它指定链接的目标。 在所有浏览器中，链接的默认外观如下： 未被访问的链接带有下划线而且是蓝色的 已被访问的链接带有下划线而且是紫色的 活动链接带有下划线而且是红色的 如果没有使用 href 属性，则不能使用 hreflang、media、rel、target 以及 type 属性。 通常在当前浏览器窗口中显示被链接页面，除非规定了其他 target。 使用 CSS 来改变链接的样式。 实例1&lt;a href="https://www.runoob.com/tags/tag-a.html"&gt;点击查看更多a标签属性介绍&lt;/a&gt; 效果：点击查看更多a标签属性介绍 &lt;link&gt; 定义文档与外部资源的关系 说明 link 标签定义文档与外部资源的关系。 link 标签最常见的用途是链接样式表。 link 元素是空元素，它仅包含属性。 此元素只能存在于 head 部分，不过它可出现任何次数。 实例123&lt;head&gt;&lt;link rel="stylesheet" type="text/css" href="https://www.runoob.com/tags/tag-link.html"&gt;&lt;/head&gt; &lt;nav&gt; 定义导航链接 说明 nav 标签定义导航链接的部分。 并不是所有的 HTML 文档都要使用到 nav 元素。nav 元素只是作为标注一个导航链接的区域。 在不同设备上（手机或者PC）可以制定导航链接是否显示，以适应不同屏幕的需求。 实例123456&lt;nav&gt; &lt;a href="/html/"&gt;HTML&lt;/a&gt; | &lt;a href="/css/"&gt;CSS&lt;/a&gt; | &lt;a href="/js/"&gt;JavaScript&lt;/a&gt; | &lt;a href="/jquery/"&gt;jQuery&lt;/a&gt;&lt;/nav&gt; 效果： HTML | CSS | JavaScript | jQuery 8、列表&lt;ul&gt;&lt;/ul&gt; 无序列表 说明 ul 标签定义无序列表。 将 ul 标签与 li 标签一起使用，创建无序列表。 使用 CSS 为列表定义样式。-使用ol 标签创建有序列表。 属性 属性 值 描述 compact compact 规定列表呈现的效果比正常情况更小巧。 type disc 默认值。实心圆(列表的项目符号的类型) square 空心圆 circle 实心方块 实例 12345&lt;ul&gt;&lt;li&gt;Coffee&lt;/li&gt;&lt;li&gt;Tea&lt;/li&gt;&lt;li&gt;Milk&lt;/li&gt;&lt;/ul&gt; 效果： CoffeeTeaMilk &lt;ol&gt;&lt;/ol&gt; 有序列表 说明 ol 标签定义了一个有序列表. 列表排序以数字来显示。 使用li 标签来定义列表选项。 如果需要无序列表，请使用 ul 标签。 使用 CSS 来定义列表样式。 属性 属性 值 描述 compact compact HTML5中不支持。规定列表呈现的效果比正常情况更小巧。 reversed reversed 指定列表倒序(9,8,7…) start number HTML5不支持，不赞成使用。请使用样式取代它。 规定列表中的起始点。 type 1 默认。数字顺序的有序列表（1, 2, 3, 4） A 字母顺序的有序列表，大写（A, B, C, D） a 字母顺序的有序列表，小写（a, b, c, d） I 罗马数字，大写（I, II, III, IV） i 罗马数字，小写（i, ii, iii, iv） 实例 1234567891011&lt;ol&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Tea&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt;&lt;/ol&gt; &lt;ol start="50"&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Tea&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt;&lt;/ol&gt; 效果： Coffee Tea Milk Coffee Tea Milk &lt;li&gt;&lt;/li&gt; 列表项 说明 li 标签定义列表项目。 li 标签可用在有序列表（ol）、无序列表（ul）和菜单列表（menu）中。 实例 123456789101112131415&lt;ol&gt; &lt;li value="100"&gt;Coffee&lt;/li&gt; &lt;li&gt;Tea&lt;/li&gt; &lt;li&gt;Beer&lt;/li&gt; &lt;ol&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li type="a"&gt;Tea&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt; &lt;/ol&gt; &lt;ul&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li type="square"&gt;Tea&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt; &lt;/ul&gt;&lt;/ol&gt; 效果： Coffee Tea Beer Coffee Tea Milk Coffee Tea Milk &lt;dir&gt;&lt;/dir&gt; 目录列表。 说明 HTML5 不支持 dir 标签。请用 CSS 代替。 在 HTML 4.01 中，dir 元素 已废弃。 dir 标签被用来定义目录列表。 实例 12345&lt;dir&gt; &lt;li&gt;html&lt;/li&gt; &lt;li&gt;xhtml&lt;/li&gt; &lt;li&gt;css&lt;/li&gt;&lt;/dir&gt; &lt;dl&gt;&lt;/dl&gt; 定义列表 说明 dl 标签定义一个描述列表。 dl 标签与 dt （定义项目/名字）和 dd （描述每一个项目/名字）一起使用。 实例 123456&lt;dl&gt; &lt;dt&gt;Coffee&lt;/dt&gt; &lt;dd&gt;Black hot drink&lt;/dd&gt; &lt;dt&gt;Milk&lt;/dt&gt; &lt;dd&gt;White cold drink&lt;/dd&gt;&lt;/dl&gt; 效果： Coffee Black hot drink Milk White cold drink &lt;dt&gt;&lt;/dt&gt; 定义列表中的项目。略 &lt;dd&gt;&lt;/dd&gt; 定义列表中项目的描述。 说明 dd 标签被用来对一个描述列表中的项目/名字进行描述。 dd 标签与 dl （定义一个描述列表）和 dt （定义项目/名字）一起使用。 在 dd 标签内，您能放置段落、换行、图片、链接、列表等等。 &lt;menu&gt;&lt;/menu&gt; 菜单列表。 说明 menu 标签定义了一个命令列表或菜单。 menu 标签通常用于文本菜单，工具条和命令列表选项。 属性 属性 值 描述 label text 描述菜单项的标记。 type context 上下文菜单。菜单必须在用户与命令进行交互之前被激活 toolbar 工具栏菜单。主动式命令，允许用户立即与命令进行交互 list 默认。规定一个列表菜单。一个用户可执行或激活的命令列表（li 元素） 实例 12345678910111213141516&lt;menu type="toolbar"&gt; &lt;!--两个菜单按钮系列选项实例（"File" 和 "Edit"）--&gt;&lt;li&gt; &lt;menu label="File"&gt; &lt;button type="button" onclick="file_new()"&gt;New...&lt;/button&gt; &lt;button type="button" onclick="file_open()"&gt;Open...&lt;/button&gt; &lt;button type="button" onclick="file_save()"&gt;Save&lt;/button&gt; &lt;/menu&gt;&lt;/li&gt;&lt;li&gt; &lt;menu label="Edit"&gt; &lt;button type="button" onclick="edit_cut()"&gt;Cut&lt;/button&gt; &lt;button type="button" onclick="edit_copy()"&gt;Copy&lt;/button&gt; &lt;button type="button" onclick="edit_paste()"&gt;Paste&lt;/button&gt; &lt;/menu&gt;&lt;/li&gt;&lt;/menu&gt; 效果： New… Open… Save Cut Copy Paste &lt;command&gt;&lt;/command&gt; 用户可能调用的命令（比如单选按钮、复选框或按钮）。 说明 command 标签可以定义用户可能调用的命令（比如单选按钮、复选框或按钮）。 当使用 menu 元素时，command 元素将作为菜单或者工具栏的一部分显示出来。但是，用 command 规定键盘快捷键时，command元素能被放置在页面的任何位置，但元素不可见。 属性 属性 值 描述 checked checked 规定当页面加载时，command 是否被选中。仅用于 radio 或 checkbox 类型。 disabled disabled 规定 command 是否可用。 icon URL 规定作为 command 来显示的图像的 URL。 label text 必需。规定 command 的名字，对用户可见。 radiogroup groupname 规定可进行切换且将被切换的 command 所属的组名。仅在类型为 radio 时使用。 type checkbox 使用复选框规定可切换的命令 command 默认。规定带有 action 的普通命令 radio 使用单选按钮规定可切换的命令 实例 123&lt;menu&gt;&lt;command type="command" label="Save" onclick="save()"&gt;Save&lt;/command&gt;&lt;/menu&gt; 效果： Save 9、表格&lt;table&gt;&lt;/table&gt; 一个表格 说明 table 标签定义 HTML 表格 一个 HTML 表格包括 table 元素，一个或多个 tr、th 以及 td 元素。 tr 元素定义表格行，th 元素定义表头，td 元素定义表格单元。 更复杂的 HTML 表格也可能包括 caption、col、colgroup、thead、tfoot 以及 tbody 元素。 属性 属性 值 描述 align left center right 规定表格相对周围元素的对齐方式。 bgcolor rgb(x,x,x) #xxxxxx colorname 规定表格的背景颜色。 border 1 “” 规定表格单元是否拥有边框。 cellpadding pixels 规定单元边沿与其内容之间的空白。 cellspacing pixels 规定单元格之间的空白。 frame void above below hsides lhs rhs vsides box border 规定外侧边框的哪个部分是可见的。 rules none groups rows cols all 规定内侧边框的哪个部分是可见的。 summary text 规定表格的摘要。 width pixels % 规定表格的宽度。 实例 123456789101112131415161718192021222324252627282930313233343536373839404142434445&lt;h4&gt;表格使用水平标题: &lt;/h4&gt;&lt;table border="1"&gt;&lt;caption&gt;表格自带标题&lt;/caption&gt; &lt;tr&gt; &lt;th&gt;Name&lt;/th&gt; &lt;th colspan="2"&gt;Telephone&lt;/th&gt; &lt;!--单元格跨两列--&gt;&lt;/tr&gt;&lt;tr&gt; &lt;td&gt;Bill Gates&lt;/td&gt; &lt;td&gt;555 77 854&lt;/td&gt; &lt;td&gt;555 77 855&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;h4&gt;表格使用水平标题: &lt;/h4&gt; &lt;table border="1"&gt;&lt;tr&gt; &lt;th&gt;First Name:&lt;/th&gt; &lt;td&gt;Bill Gates&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt; &lt;th rowspan="2"&gt;Telephone:&lt;/th&gt; &lt;!--单元格跨两行--&gt; &lt;td&gt; &lt;!--这个单元格包含一个列表--&gt; &lt;ul&gt; &lt;li&gt;apples&lt;/li&gt; &lt;li&gt;bananas&lt;/li&gt; &lt;li&gt;pineapples&lt;/li&gt; &lt;/ul&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt; &lt;td&gt; &lt;!--这个单元格包含一个表格--&gt; &lt;table border="1"&gt; &lt;tr&gt; &lt;td&gt;A&lt;/td&gt; &lt;td&gt;B&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;C&lt;/td&gt; &lt;td&gt;D&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 效果： 表格使用水平标题: 表格自带标题 Name Telephone Bill Gates 555 77 854 555 77 855 表格使用水平标题: First Name: Bill Gates Telephone: apples bananas pineapples A B C D &lt;caption&gt;&lt;/caption&gt; 表格标题。 说明 caption 标签定义表格的标题。 caption 标签必须直接放置到 table 标签之后。 您只能对每个表格定义一个标题。 通常这个标题会被居中于表格之上。然而 CSS 属性 “text-align” 和 “caption-side” 能用来设置标题的对齐方式和显示位置。 属性 align：left、right、top、bottom 实例 1234567891011&lt;table border="1"&gt; &lt;caption&gt;Monthly savings&lt;/caption&gt; &lt;tr&gt; &lt;th&gt;Month&lt;/th&gt; &lt;th&gt;Savings&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;January&lt;/td&gt; &lt;td&gt;$100&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 效果： Monthly savings Month Savings January $100 &lt;th&gt;&lt;/th&gt; 表头单元格。 说明 &lt;th&gt; 标签定义 HTML 表格中的表头单元格。 HTML 表格有两种单元格类型： 表头单元格 - 包含头部信息（由 &lt;th&gt; 元素创建） 标准单元格 - 包含数据（由 &lt;td&gt; 元素创建） &lt;th&gt; 元素中的文本通常呈现为粗体并且居中。 &lt;td&gt; 元素中的文本通常是普通的左对齐文本。 属性 属性 值 描述 abbr text 规定表头单元格中内容的缩写版本。 align left 规定表头单元格内容的水平对齐方式。 right center justify char axis category_name 对表头单元格进行分类。 bgcolor rgb(x,x,x) 规定表头单元格的背景颜色。 #xxxxxx colorname char character 规定根据哪个字符来进行内容的对齐。 charoff number 规定对齐字符的偏移量。 colspan number 规定表头单元格可横跨的列数。 headers header_id 规定与表头单元格相关联的一个或多个表头单元格。 height pixels 规定表头单元格的高度。 % nowrap nowrap 规定表头单元格中的内容是否折行。 rowspan number 规定表头单元格可横跨的行数。 scope col 规定表头单元格是否是行、列、行组或列组的头部。 colgroup row rowgroup valign top 规定表头单元格内容的垂直排列方式。 middle bottom baseline width pixels 规定表头单元格的宽度。 % 实例 12345678910&lt;table border="1"&gt; &lt;tr&gt; &lt;th&gt;Month&lt;/th&gt; &lt;th&gt;Savings&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;January&lt;/td&gt; &lt;td&gt;$100&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 效果： MonthSavingsJanuary$100 &lt;tr&gt;&lt;/tr&gt; 表格中的行。 说明 &lt;tr&gt; 标签定义 HTML 表格中的行。 一个 &lt;tr&gt; 元素包含一个或多个 &lt;th&gt; 或 &lt;td&gt; 元素。 属性 属性 值 描述 align right 定义表格行的内容对齐方式。 left center justify char bgcolor rgb(x,x,x) 规定表格行的背景颜色。 #xxxxxx colorname char character 规定根据哪个字符来进行文本对齐。 charoff number 规定第一个对齐字符的偏移量。 valign top 规定表格行中内容的垂直对齐方式。 middle bottom baseline 实例 12345678910&lt;table border="1"&gt; &lt;tr&gt; &lt;th&gt;Month&lt;/th&gt; &lt;th&gt;Savings&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;January&lt;/td&gt; &lt;td&gt;$100&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 效果： Month Savings January $100 &lt;td&gt;&lt;/td&gt; 表格中的单元。 说明 &lt;td&gt; 标签定义 HTML 表格中的标准单元格。 HTML 表格有两种单元格类型： 表头单元格 - 包含头部信息（由 &lt;th&gt; 元素创建） 标准单元格 - 包含数据（由 &lt;td&gt; 元素创建） &lt;th&gt; 元素中的文本通常呈现为粗体并且居中。 &lt;td&gt; 元素中的文本通常是普通的左对齐文本。 属性 同&lt;th&gt;标签属性 实例 123456&lt;table border="1"&gt; &lt;tr&gt; &lt;td&gt;Cell A&lt;/td&gt; &lt;td&gt;Cell B&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 效果： Cell A Cell B &lt;thead&gt;&lt;/thead&gt; 表格中的表头内容。 说明 &lt;thead&gt; 标签用于组合 HTML 表格的表头内容。 &lt;thead&gt; 元素应该与 &lt;tbody&gt; 和 &lt;tfoot&gt; 元素结合起来使用，用来规定表格的各个部分（表头、主体、页脚）。 通过使用这些元素，使浏览器有能力支持独立于表格表头和表格页脚的表格主体滚动。当包含多个页面的长的表格被打印时，表格的表头和页脚可被打印在包含表格数据的每张页面上。 &lt;thead&gt; 标签必须被用在以下情境中：作为 &lt;table&gt; 元素的子元素，出现在 &lt;caption&gt;、&lt;colgroup&gt; 元素之后，&lt;tbody&gt;、 &lt;tfoot&gt; 和 &lt;tr&gt; 元素之前。 &lt;thead&gt; 元素内部必须包含一个或者多个 &lt;tr&gt; 标签。 &lt;thead&gt;、&lt;tbody&gt; 和 &lt;tfoot&gt; 元素默认不会影响表格的布局。不过可使用 CSS 来为这些元素定义样式，从而改变表格的外观。 属性 属性 值 描述 align right 定义 &lt;thead&gt; 元素中内容的对齐方式 left center justify char char character 规定 &lt;thead&gt; 元素中内容根据哪个字符来对进行文本对齐。 charoff number 规定 &lt;thead&gt; 元素中内容的第一个对齐字符的偏移量。 valign top 规定 &lt;thead&gt; 元素中内容的垂直对齐方式。 middle bottom baseline 实例 123456789101112131415161718192021222324&lt;table border="1"&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Month&lt;/th&gt; &lt;th&gt;Savings&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tfoot&gt; &lt;tr&gt; &lt;td&gt;Sum&lt;/td&gt; &lt;td&gt;$180&lt;/td&gt; &lt;/tr&gt; &lt;/tfoot&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;January&lt;/td&gt; &lt;td&gt;$100&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;February&lt;/td&gt; &lt;td&gt;$80&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; 效果： Month Savings Sum $180 January $100 February $80 &lt;tbody&gt;&lt;/tbody&gt; 表格中的主体内容。 说明 &lt;tbody&gt; 标签用于组合 HTML 表格的主体内容。 &lt;tbody&gt; 元素应该与 &lt;thead&gt; and &lt;tfoot&gt; 元素结合起来使用，用来规定表格的各个部分（主体、表头、页脚）。 通过使用这些元素，使浏览器有能力支持独立于表格表头和表格页脚的表格主体滚动。当包含多个页面的长的表格被打印时，表格的表头和页脚可被打印在包含表格数据的每张页面上。 &lt;tbody&gt; 标签必须被用在以下情境中：作为 &lt;table&gt; 元素的子元素，出现在 &lt;caption&gt;、&lt;colgroup&gt; 和 &lt;thead&gt; 元素之后。 &lt;tbody&gt; 元素内部必须包含一个或者多个 &lt;tr&gt; 标签。 &lt;thead&gt;、&lt;tbody&gt; 和 &lt;tfoot&gt; 元素默认不会影响表格的布局。不过可使用 CSS 来为这些元素定义样式，从而改变表格的外观。 属性 同&lt;thead&gt;标签属性 实例 123456789101112131415161718192021222324&lt;table border="1"&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Month&lt;/th&gt; &lt;th&gt;Savings&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tfoot&gt; &lt;tr&gt; &lt;td&gt;Sum&lt;/td&gt; &lt;td&gt;$180&lt;/td&gt; &lt;/tr&gt; &lt;/tfoot&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;January&lt;/td&gt; &lt;td&gt;$100&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;February&lt;/td&gt; &lt;td&gt;$80&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; 效果： Month Savings Sum $180 January $100 February $80 &lt;tfoot&gt;&lt;/tfoot&gt; 表格中的表注内容（脚注）。 说明 &lt;tfoot&gt; 标签用于组合 HTML 表格的页脚内容。 &lt;tfoot&gt; 元素应该与 &lt;thead&gt; and &lt;tbody&gt; 元素结合起来使用，用来规定表格的各个部分（页脚、表头、主体）。 通过使用这些元素，使浏览器有能力支持独立于表格表头和表格页脚的表格主体滚动。当包含多个页面的长的表格被打印时，表格的表头和页脚可被打印在包含表格数据的每张页面上。 &lt;tfoot&gt; 标签必须被用在以下情境中：作为 &lt;table&gt; 元素的子元素，出现在 &lt;caption&gt;、&lt;colgroup&gt; 和 &lt;thead&gt; 元素之后。tbody 和 tr 元素之前。 &lt;tfoot&gt; 元素内部必须包含一个或者多个 &lt;tr&gt; 标签。 &lt;thead&gt;、&lt;tbody&gt; 和 &lt;tfoot&gt; 元素默认不会影响表格的布局。不过可使用 CSS 来为这些元素定义样式，从而改变表格的外观。 属性 同&lt;thead&gt;标签属性 实例 123456789101112131415161718192021222324&lt;table border="1"&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Month&lt;/th&gt; &lt;th&gt;Savings&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tfoot&gt; &lt;tr&gt; &lt;td&gt;Sum&lt;/td&gt; &lt;td&gt;$180&lt;/td&gt; &lt;/tr&gt; &lt;/tfoot&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;January&lt;/td&gt; &lt;td&gt;$100&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;February&lt;/td&gt; &lt;td&gt;$80&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; 效果： Month Savings Sum $180 January $100 February $80 &lt;col&gt; 表格中一个或多个列的属性值。 说明 &lt;col&gt; 标签规定了 &lt;colgroup&gt; 元素内部的每一列的列属性。 通过使用 &lt;col&gt; 标签，可以向整个列应用样式，而不需要重复为每个单元格或每一行设置样式。 属性 属性 值 描述 align left 规定与 &lt;col&gt; 元素相关的内容的水平对齐方式。 right center justify char char character 规定根据哪个字符来对齐与 &lt;col&gt; 元素相关的内容。 charoff number 规定第一个对齐字符的偏移量。 span number 规定 &lt;col&gt; 元素应该横跨的列数。 valign top 规定与 &lt;col&gt; 元素相关的内容的垂直对齐方式。 middle bottom baseline width % 设置以包围元素的百分比计的宽度值（例子：width=”50%”） pixels 设置以像素计的宽度值（例子：width=”50”） relative_length 把可用像素分配到各部分 实例 12345678910111213141516&lt;table border="1" width="100%"&gt; &lt;col width="100"&gt; &lt;col width="50"&gt; &lt;tr&gt; &lt;th&gt;Month&lt;/th&gt; &lt;th&gt;Savings&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;January&lt;/td&gt; &lt;td&gt;$100&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;February&lt;/td&gt; &lt;td&gt;$80&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 效果： Month Savings January $100 February $80 &lt;colgroup&gt;&lt;/colgroup&gt; 表格中供格式化的列组。 说明 &lt;colgroup&gt; 标签用于对表格中的列进行组合，以便对其进行格式化。 通过使用 &lt;colgroup&gt; 标签，可以向整个列应用样式，而不需要重复为每个单元格或每一行设置样式。 只能在 &lt;table&gt; 元素之内，在任何一个 &lt;caption&gt; 元素之后，在任何一个 &lt;thead&gt;、&lt;tbody&gt;、&lt;tfoot&gt;、&lt;tr&gt; 元素之前使用 &lt;colgroup&gt; 标签。 如果想对 &lt;colgroup&gt; 中的某列定义不同的属性，请在 &lt;colgroup&gt; 标签内使用 &lt;col&gt; 标签。 属性 同 col 标签属性 实例 123456789101112131415161718192021&lt;table border="1"&gt; &lt;colgroup&gt; &lt;col span="2" style="background-color:red"&gt; &lt;col style="background-color:yellow"&gt; &lt;/colgroup&gt; &lt;tr&gt; &lt;th&gt;ISBN&lt;/th&gt; &lt;th&gt;Title&lt;/th&gt; &lt;th&gt;Price&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;3476896&lt;/td&gt; &lt;td&gt;My first HTML&lt;/td&gt; &lt;td&gt;$53&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;5869207&lt;/td&gt; &lt;td&gt;My first CSS&lt;/td&gt; &lt;td&gt;$49&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 效果： ISBN Title Price 3476896 My first HTML $53 5869207 My first CSS $49 10、样式/节&lt;style&gt; 定义文档的样式信息。 说明 属性 实例12 效果： &lt;div&gt; 定义文档中的节。 说明 属性 实例12 效果： &lt;span&gt; 定义文档中的节。 说明 属性 实例12 效果： &lt;header&gt; 定义一个文档头部部分 说明 属性 实例12 效果： &lt;footer&gt; 定义一个文档底部 说明 属性 实例12 效果： &lt;section&gt; 定义了文档的某个区域 说明 属性 实例12 效果： &lt;article&gt; 定义一个文章内容 说明 属性 实例12 效果： &lt;aside&gt; 定义其所处内容之外的内容。 说明 属性 实例12 效果： &lt;details&gt; 定义了用户可见的或者隐藏的需求的补充细节。 说明 属性 实例12 效果： &lt;dialog&gt; 定义一个对话框或者窗口 说明 属性 实例12 效果： &lt;summary&gt; 定义一个可见的标题。 当用户点击标题时会显示出详细信息。 说明 属性 实例12 效果： 11、元信息&lt;head&gt; 定义关于文档的信息 说明 属性 实例12 效果： &lt;meta&gt; 定义关于 HTML 文档的元信息。 说明 属性 实例12 效果： &lt;base&gt; 定义页面中所有链接的默认地址或默认目标。 说明 属性 实例12 效果： &lt;basefont&gt; 定义页面中文本的默认字体、颜色或尺寸。 说明 属性 实例12 效果： 12、程序&lt;script&gt; 定义客户端脚本。 说明 属性 实例12 效果： &lt;noscript&gt; 定义针对不支持客户端脚本的用户的替代内容。 说明 属性 实例12 效果： &lt;applet&gt; HTML5不再支持。 HTML 4.01 已废弃。 定义嵌入的 applet。 说明 属性 实例12 效果： &lt;embed&gt; 定义了一个容器，用来嵌入外部应用或者互动程序（插件）。 说明 属性 实例12 效果： &lt;object&gt; 定义嵌入的对象。 说明 属性 实例12 效果： &lt;param&gt; 定义对象的参数。 说明 属性 实例12 效果：]]></content>
      <categories>
        <category>学习笔记</category>
        <category>HTML</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[markdown基本语法（快速入门）]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2Fmarkdown%2Fmarkdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%EF%BC%88%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%89%2F</url>
    <content type="text"><![CDATA[1 基本操作 1.1 标题 1.2 加粗、斜体、高亮 1.3 上标、下标 1.4 代码引用 1.5 插入链接 1.6 插入图片 1.7 有序列表、无序列表 1.8 分割线 1.9 表格 2 其他操作 2.1 特殊字符自动转换 2.2 数学公式 1 基本操作1.1 标题代码： 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 效果无法直视，自行体验~ 1.2 加粗、斜体123**加粗***倾斜*==高亮== 加粗 倾斜 ==高亮== 1.3 上标、下标12^3^4^5^6^7^ 上标效果： 2^3^4^5^6^7^ 1H~2~O~F~2 下标效果： H~2~O~F~2 1.4 代码引用第一种（&gt;式） 1&gt; hello markdown! 效果： hello markdown! 第二种（三点式） 实际应去掉下方反斜杠（此处因展示需要） 1234\`\`\`pythonprint(&apos;hello nick&apos;)\`\`\` 效果： 12pythonprint(&apos;hello nick&apos;) 第三种（点式） 1`print(&apos;hello nick&apos;)` 效果： print(&#39;hello nick&#39;) 1.5 插入链接第一种：用&lt;&gt;包裹链接 1&lt;https://panyanyun.github.io/&gt; 效果： https://panyanyun.github.io/ 第二种：文字描述超链接 1[我的博客](https://panyanyun.github.io/&quot;pyy博客&quot;) 效果： 我的博客 1.6 插入图片第一种：行内式 ![Alt text](/path/to/img.jpg) ![Alt text](/path/to/img.jpg &quot;Optional title&quot;) 代码: 1![表情包](D:/123.jpg &quot;我膨胀了&quot;) 效果： 第二种：参考式 ![Alt text][id] [id]: url/to/image &quot;Optional title attribute&quot; 代码： 1![表情包](https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1577091540534&amp;di=cb6a6993c03cb17b6e326aeed9cd1998&amp;imgtype=0&amp;src=http%3A%2F%2Fbiaoqingba.cn%2Fwp-content%2Fuploads%2F2018%2F09%2Fbd3f8cd699a6823.jpeg &quot;我膨胀了&quot;) 效果： 1.7 有序列表、无序列表有序列表：使用数字接着一个英文句点 1231. 馒头2. 油条 3. 包子 效果： 馒头 油条 包子 无序列表：使用星号、加号或是减号作为列表标记 123456789* one* two* three + Red + Green + Blue - Red - Green - Blue 效果： one two three Red Green Blue Red Green Blue 1.8 分割线12---*** 效果： 1.9 表格代码： 1234类型 | 金额---|---自动 | 12345手动 | 54321 效果： 类型 金额 自动 12345 手动 54321 2 其他操作2.1 特殊字符自动转换12&amp;copy; 4&amp;lt;5 &copy; 4&lt;5 2.2 数学公式1内嵌数学公式$\sum_&#123;i=1&#125;^&#123;10&#125;f(i)\,\,\text&#123;thanks&#125;$ 内嵌数学公式 $\sum_{i=1}^{10}f(i)\,\,\text{thanks}$ 2.3 反斜杠用反斜杠来插入一些在语法中有其它意义的符号： 12*不加反斜杠*\*加反斜杠\* 效果： 不加反斜杠呈现倾斜效果 *加反斜杠星号不起作用* 附：基础markdown语法参考：https://www.appinn.com/markdown/https://www.cnblogs.com/nickchen121/p/10821946.html]]></content>
      <categories>
        <category>学习笔记</category>
        <category>markdown</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[（九）浏览器兼容问题&自定义字体&媒体检测]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%2F%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%2FCSS%2F%EF%BC%88%E4%B9%9D%EF%BC%89%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98%26%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E4%BD%93%26%E5%AA%92%E4%BD%93%E6%A3%80%E6%B5%8B%2F</url>
    <content type="text"><![CDATA[1、CSS样式的浏览器兼容问题解决12345678CSS样式属性名称前缀： -moz- 支持火狐浏览器 -webkit- 支持谷歌、Safari浏览器 -o- 支持Opera -ms- 支持IE浏览器 -icab- -khtml www.webjx.com 2、自定义字体@font-face{ font-family: 自定义字体名称（一般使用英文单词）; src: url(字体文件的路径); } 选择器{ font-family: &quot;自定义字体名称&quot;; } 3、媒体检测(解决分辨率兼容)Media Query http://192.168.0.102:8020/course10/%E5%AA%92%E4%BD%93%E6%A3%80%E6%B5%8B%EF%BC%88%E4%B8%8A%EF%BC%89.html easyui jquery bootstrap layui 自己亲自动手去测试浏览器兼容问题自定义字体媒体检测]]></content>
      <categories>
        <category>学习笔记</category>
        <category>前端开发</category>
        <category>第一阶段</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>前端笔记</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[（八）CSS优先级]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%2F%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%2FCSS%2F%EF%BC%88%E5%85%AB%EF%BC%89CSS%E4%BC%98%E5%85%88%E7%BA%A7%2F</url>
    <content type="text"><![CDATA[1、CSS选择器优先级浏览器是通过判断CSS优先级，来决定到底哪些属性值是与元素最为相关的，从而作用到该元素上。 CSS选择器的合理组成规则决定了优先级，我们也常常用选择器优先级来合理控制元素达到我们理想的显示状态，下面我们来具体了解下CSS选择器 优先级及权重。 2、CSS选择器如何计算？1）当CSS选择器权重值相同，则最后的声明的CSS选择器覆盖靠前的 CSS。 2）CSS优先级是根据由每种选择器类型构成的级联字串计算而成的，它不是一个对应相应匹配表达式的权重值。 3）相同CSS表达式，在DOM结构中的距离是不会对元素优先级计算产生影响的。 3、CSS默认优先级顺序下列是一份优先级由低到高的选择器列表： 1）通配符选择器 *{} 2）元素（类型）选择器 p{} 3）类选择器 .class属性值{} 4）属性筛选选择器 input[name=”gender”]{} 5）伪类 6）ID 选择器 #id属性值{} 7）内联样式 4、多重样式（Multiple Styles）如果外部样式、内嵌样式和内联样式同时应用于同一个元素，就是使多重样式的情况。 一般情况下，优先级为： ==（外部样式）External style sheet&lt;（内嵌样式）Internal style sheet &lt;（内联样式）Inline style== 有个例外的情况，就是如果外部样式放在内嵌样式的后面，则外部样式将覆盖内嵌样式。 5、选择器的优先权值1）内联样式表的权值最高 1000。 2）ID 选择器的权值为 100。 3）Class 类选择器的权值为 10。 4）元素选择器的权值为 1。 6、CSS 优先级规则：1）选择器都有一个权值，权值越大越优先。 2）当权值相等时，后出现的样式表设置要优于先出现的样式表设置。 3）创作者的规则高于浏览者：即网页编写者设置的CSS 样式的优先权高于浏览器所设置的样式。 4）继承的CSS 样式不如后来指定的CSS 样式 5）在同一组属性设置中标有“!important”规则的优先级最大。 7、CSS !important 规则 注意：IE6不支持!important规则，目前绝大多数浏览器都支持。]]></content>
      <categories>
        <category>学习笔记</category>
        <category>前端开发</category>
        <category>第一阶段</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>前端笔记</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[（七）浮动和定位]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%2F%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%2FCSS%2F%EF%BC%88%E4%B8%83%EF%BC%89%E6%B5%AE%E5%8A%A8%E5%92%8C%E5%AE%9A%E4%BD%8D%2F</url>
    <content type="text"><![CDATA[1、盒模型类别box-sizing:content-box;(默认) box-sizing:border-box;（怪异盒子） 二者的区别： content-box 表示目标元素是一个标准盒模型，也就是说它的宽度计算公式为：边框宽度+自身宽度+左右padding值； border-box 表示目标元素是一个非标准盒模型，也就是说它的宽度与左右padding值无关，高度与上下padding值无关； 2、边框圆角12345border-radius: 5px;border-top-left-radius: 10px;border-top-right-radius: 10px;border-bottom-left-radius: 10px;border-bottom-right-radius: 10px; 3、盒阴影效果 box-shadow: 5px 5px 5px gray; 4、透明度用任意元素实现一个按钮 opacity: 0~1之间小数; 或者百分比 5、浮动 当多个块级元素上下排列时，但我们想要让这些块级元素左右排列。 float:left/right; 注意：参与浮动的元素的宽度总和不能超过其父级元素的宽度；若超过了则会自动换行展示。 clear: both; /清除浮动/ 6、定位1）绝对定位 position:absolute;是将目标元素的左上角与浏览器窗口的左上角进行定位 2）相对定位 position:relative;是相对于目标元素本来所在位置而定位 3）固定定位 position:fixed; 将目标元素固定在浏览器窗口的某个位置，即使拖动滚动条其位置也不会改变。 4）注意事项 4.1）以上三种定位方式都是使用position属性来控制； 4.2）以上三种定位方式都是使用position属性来控制，但不能单独使用，必须配合left top right bottom属性来使用 4.3）left top right bottom四个属性使用的时候，必须以两个相邻边组成一个角。 7、遮挡 1）使用了定位的元素会遮挡未使用定位的元素。 2）若两个块级元素同时使用定位，改变其中一个块级的位置后，下边的块级会自动遮挡上边的块级元素。 3）可以使用z-index样式属性来调整谁遮挡住谁；z-index值越大的块级元素会挡住z-index值越小的。]]></content>
      <categories>
        <category>学习笔记</category>
        <category>前端开发</category>
        <category>第一阶段</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>前端笔记</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[（六）盒模型（div+css布局）]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%2F%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%2FCSS%2F%EF%BC%88%E5%85%AD%EF%BC%89%E7%9B%92%E6%A8%A1%E5%9E%8B%EF%BC%88div%2Bcss%E5%B8%83%E5%B1%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[1、理解盒模型1）边框 border1234 border-top-widthborder-top-styleborder-top-color合并后为 border-top: 边框宽度 边框形式 边框颜色; 1234border-bottom-widthborder-bottom-styleborder-bottom-color合并后为 border-bottom 1234border-left-widthborder-left-styleborder-left-color合并后为 border-left 1234border-right-widthborder-right-styleborder-right-color合并后为 border-right 12345678 border-width 指定四条边框的宽度 border-style 指定四条边框的形式 border-color 指定四条边框的颜色 总缩写 border: 边框宽度 边框形式 边框颜色;``` ==注意：只有块级元素才有边框。== #### 2）外边距 margin margin-top margin-bottom margin-left margin-right 1#### 3）内边距 padding padding-top padding-bottom padding-left padding-right 12345678 注意： 所谓外边距和内边距是参照物不同而带来两个不同CSS样式属性名称； 若两条边框的距离在当前参照物之外则称为外边距; 若两条边框的距离在当前参照物之内则称为内边距。 若使用内边距调整元素位置时，需要注意其宽度和高度会随着内边距改变而改变（边框宽度 + 自身宽度 + 左右padding值）### 2、显示以及隐藏 display:none; visibility:hidden; ` 二者隐藏元素的区别： 前者隐藏目标元素，且不保留其所占位置空间；而后者隐藏目标元素时要保留其所占位置空间。]]></content>
      <categories>
        <category>学习笔记</category>
        <category>前端开发</category>
        <category>第一阶段</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>前端笔记</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[（五）常见CSS样式及取值]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%2F%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%2FCSS%2F%EF%BC%88%E4%BA%94%EF%BC%89%E5%B8%B8%E8%A7%81CSS%E6%A0%B7%E5%BC%8F%E5%8F%8A%E5%8F%96%E5%80%BC%2F</url>
    <content type="text"><![CDATA[1、属性筛选选择器选择器[属性=&quot;值&quot;]{} 选择器,选择器{} 选择:nth-child(xn+y){} 2、文本1）文本内容对齐方式 text-align: left(默认)/center/right; 2）文本内容溢出处理 white-space: nowrap; /*文本内容不换行*/ overflow: hidden; /*将溢出的内容隐藏*/ text-overflow: ellipsis;/*文本内容溢出并隐藏后添加省略号*/ 3）文本颜色 color: 颜色单词/rgb()/#6位十六进制数字; 3、字体1）字体类型 font-family: &quot;字体名称&quot;; 2）字体大小 font-size: 20px; 3）字体样式 font-style: normal/italic(斜体字); 4）字体粗细程度 font-weight: normal/bold; 5）文本修饰 text-decoration: none/underline/overline/line-through; 6）行高 line-height: 20px; 7）字体样式简写 font: italic normal bold 24px/30px &quot;宋体&quot;; 4、背景1）背景颜色 background-color: 颜色单词/rgb()/#6位十六进制数字; 2）背景图片 background-image: url(图片文件的路径); 背景图片比目标区域更小，则背景图片在会目标区域内自动平铺和重复。 background-repeat: no-repeat/repeat-x/repeat-y; 背景图片比目标区域更大，则会自动裁剪背景图的左上角（目标区域大小）来作为背景图片。 background-position: -100px -100px; 是以背景图片的左上角的坐标看作为0,0，如果-100px -100px则表示将背景图片往左边移动100px再往上边移动100px 然后再以这个点为起点向右下将背景图进行裁剪（目标区域大小）来作为背景图片。 5、列表list-style-type: none; list-style-image:url(小图标路径); 6、其他cursor: pointer; 7、单位1）长度 px 2）颜色 3）角度 4）时间]]></content>
      <categories>
        <category>学习笔记</category>
        <category>前端开发</category>
        <category>第一阶段</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>前端笔记</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[（四）CSS基础样式]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%2F%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%2FCSS%2F%EF%BC%88%E5%9B%9B%EF%BC%89CSS%E5%9F%BA%E7%A1%80%E6%A0%B7%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[1、CSS简介Cascading Style Sheets它用于定义HTML元素的显示形式，是一种格式化网页内容的技术。CSS现在已经被大多数浏览器所支持，成为网页设计者必须掌握的技术之一。 W3C自1996年12月发布第一个CSS正式推荐版CSS1.0以来，一直在对CSS标准进行修订、升级。1999年1月，CSS2.0正式推荐版发布，增加了对其它媒体（打印机、视觉设备）、可下载字体、元素定位和表格的支持。最新版本的CSS标准CSS 3.0正在开发中使用。 2、使用CSS样式的优点1）提高页面浏览速度 2）缩短改版时间，降低维护费用 3）强大的字体控制和排版能力 4）可以一次设计，随处发布 5）更好的控制页面布局 6）实现表现和结构、内容相分离 7）更方便搜索引擎的搜索 3、HTML引入CSS样式的方式1234 1）内联 直接在需要添加样式的标签上写style属性即可。 2）内嵌 在head内书写style元素，其中再添加样式。 3）外联 在当前html文件外部创建一个css文件，其中书写样式，然后在html的head内部使用link标签将其引入。&lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;css/test.css&quot; /&gt; 4、理解样式表的层叠效果当多处添加样式修饰同一个标签元素时，会出现以下两种现象： 覆盖：样式属性名称相同时，则依据就近原则，离当前标签元素越近的样式将会覆盖离得越远的样式。 叠加：样式属性名称不同时，则会叠加效果。 5、CSS样式语法规则键值对 样式属性名称: 样式属性值； 6、选择器(重要)1）概念：选择器是指通过某种特定的方式查找到需要添加样式的那些目标元素的语法。 2）什么时候用选择器？内嵌样式表和外联样式表中才需要使用选择器，而内联样式不需要。 3）常用的选择器3.1）元素选择器直接用元素名称作为选择器 将html页面内的所有当前名称的元素全部选中后添加样式。 span{} div{} a{} b{} body{} 3.2）ID选择器在需要添加样式的目标元素上添加id属性，然后在内嵌样式表和外联样式表中使用如下语法： #id属性值{} 注意html页面内所有元素的id属性值不能重复。 3.3）类选择器 class选择器 在需要添加样式的目标元素上添加class属性，然后在内嵌样式表和外联样式表中使用如下语法： .class属性值{} 注意： 元素选择器和class选择器都可能会选择0到多个目标元素，而id选择器只能选中0到1个目标元素。 3.4）包含选择器父级元素的选择器 后代元素的选择器{} 包含选择器可以跨级。 3.5）子元素选择器父级元素的选择器&gt;子元素的选择器{} 子元素选择器不能跨级. 3.6）伪类选择器各种基础选择器:伪类选择器{} 例如 a:hover{} hover是指鼠标移到目标区域后添加样式，鼠标移开时删除样式 123456789:first:first-child:last:last-child:nth-child:checked:disabled:empty:focus 3.7）通配符选择器 表示选中当前html页面内所有标签元素*{} 7、标识符命名规范1）以字母开头，后续字符可以是字母、数字、下划线； 2）不能包含空格、中文以及其他各种特殊字符； 3）不能使用开发语言中的关键字； 4）见名知意； 5）驼峰命名；]]></content>
      <categories>
        <category>学习笔记</category>
        <category>前端开发</category>
        <category>第一阶段</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>前端笔记</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[（三）表单和表格布局]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%2F%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%2FHTML%2F%EF%BC%88%E4%B8%89%EF%BC%89%E8%A1%A8%E5%8D%95%E5%92%8C%E8%A1%A8%E6%A0%BC%E5%B8%83%E5%B1%80%2F</url>
    <content type="text"><![CDATA[1、表单1）概念 表单是在网页上提供给用户输入信息的一组输入控件元素的集合。将用户在网页上输入的信息传输到web服务器端，目的是为了完成某种特定功能。 2）应用123456789101112131415161718192021222324252627 表单控件元素2.1）单行文本输入框 type=&quot;text&quot;2.2）密码输入框 type=&quot;password&quot;2.3）单选框 type=&quot;radio&quot;2.4）多选框 type=&quot;checkbox&quot;2.5）文件上传 type=&quot;file&quot;2.6）下拉列表 select元素内部写多个option选项2.7）文本域 textarea2.8）普通按钮 type=&quot;button&quot;2.9）提交按钮 type=&quot;submit&quot;2.10）重置按钮 type=&quot;reset&quot;2.11）以图片代替提交按钮 type=&quot;image&quot;2.12）颜色选择框 type=&quot;color&quot;2.13）进度调节 type=&quot;range&quot; 3）实例登录示例 4）form元素属性1234567 4.1）action=&quot;提交地址&quot; 指当点击提交按钮时要将此表单的数据提交到哪儿去。 4.2）method=&quot;GET&quot; get或者post 建议使用POST 4.3）enctype=&quot;multipart/form-data&quot; 以二进制方式提交数据（文件上传） 若表单内有文件上传框时，则form元素的method属性值必须为POST，enctype属性必须写，且其值必须 为multipart/form-data 。``` #### 5）input元素属性 5.1）type=&quot;&quot; 5.2）name=&quot;&quot; 取个名字 不能用中文、特殊字符 当提交表单时作为参数名称用。 注意： 当type属性值为radio或checkbox时，name属性值要保持一致，表示这些选项是同一组的。 当input元素没写name属性时，表单提交时将不提交此输入框内的数据。 5.3）value=&quot;&quot; 值 当页面刷新后会在输入框内自动填入value属性的值。 注意： 当type属性值为radio或checkbox时，value属性值必须不能重复。 5.4）placeholder=&quot;提示内容&quot; 5.5）autofocus 自动聚焦 5.6）checked 默认选中 用在单选框和多选框上。 ` 6）下拉列表项默认选中select元素要写name属性 option选项元素必须写value属性，且value属性值不能重复。 2、表单GET与POST方式提交数据的区别表单form元素若没写method属性时，默认是method=&quot;GET&quot;。 1）GET方式是明文提交，数据会直接展示在浏览器的地址栏中，而POST是隐式提交； 2）GET方式提交数据不能超过255个字符，而POST提交内容长度无限制； 3）GET方式只能以文本提交，而POST方式既能以文本方式提交，也能以二进制数据方式提交； 3、表格布局与表单混合使用]]></content>
      <categories>
        <category>学习笔记</category>
        <category>前端开发</category>
        <category>第一阶段</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>前端笔记</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[（二）常用标记2]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%2F%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%2FHTML%2F%EF%BC%88%E4%BA%8C%EF%BC%89%E5%B8%B8%E7%94%A8%E6%A0%87%E8%AE%B02%2F</url>
    <content type="text"><![CDATA[1、iframe和frameset12341）iframe嵌入一个网页;2）超链接和iframe配合使用; 可以用来做边界布局 东南西北中 东邪 西毒 南帝 北丐 中神通3）利用iframe来布局; 2、表格（重要）1234567891）基本表格 &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; 注意：表格内的内容必须写在td标签内。 12345678910111213141516172）table、tr、td的常用属性 table 的常用属性： width=&quot;宽度&quot; 宽度可以填百分比 500px border=&quot;1&quot; 默认值是0 1表示有边框 0表示无边框 cellspacing=&quot;0&quot; 默认值是1 1表示单元格之间有间距 0表示无间距 align=&quot;center&quot; 默认值是left left表示居左 center表示居中 right表示居右 bordercolor=&quot;orange&quot; 表示边框颜色 属性值可以填颜色英文单词 rgb(100,20,200) #6位十六进制数字 bgcolor=&quot;orange&quot; 表示表格的背景颜色 tr 的常用属性： height=&quot;40px&quot; 指定行高 align=&quot;center&quot; 默认值是left left表示居左 center表示居中 right表示居右 bgcolor=&quot;&quot; td 的常用属性： width=&quot;50px&quot; align=&quot;center&quot; 默认值是left left表示居左 center表示居中 right表示居右 123）合并列 从某个单元格位置跨列向右合并单元格 colspan=&quot;整数&quot; 124）合并行 从某个单元格位置跨行向下合并单元格 rowspan=&quot;整数&quot; 3、列表list123 1）无序列表unordered list ul2）有序列表ordered list ol3）定义列表define list dl 4、所有标签元素分类123456789 1）写法分类 围堵元素 自开自闭元素 2）展示效果（是否换行） 字符级元素 a b i em span label font strong small big address img 块级元素 div p table tr td ul ol dl li]]></content>
      <categories>
        <category>学习笔记</category>
        <category>前端开发</category>
        <category>第一阶段</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>前端笔记</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[（一）网页结构及常用标记]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%2F%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%2FHTML%2F%EF%BC%88%E4%B8%80%EF%BC%89%E7%BD%91%E9%A1%B5%E7%BB%93%E6%9E%84%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%A0%87%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[1、web应用程序及其组成部分网站分类 1、从访问权限：外网访问 百度、淘宝、京东 局域网访问 大学校园网 教学管理系统 2、从业务功能：电子商务 OA办公自动化系统 CRM客户关系管理系统 web应用程序的组成部分： 服务器 浏览器 网页 HTTP协议（网络） 服务器 Apache Server httpd ---&gt; PHP语言 Apache Tomcat ---&gt; Java语言 访问https://www.baidu.com 在浏览器中通过点击超链接或点击某些按钮，将一些信息通过HTTP协议发送到服务器上，我们称这个发送过程为请求； 服务器收到本次请求，它将对本次请求进行专门的处理，然后将处理结果通过网络又发送给浏览器，我们称这个过程叫响应。 2、网页及其组成部分、分类网页其实就是一个文本文件，它必须以.html或.htm后后缀名称。 java语言 .jsp php语言中 .php .asp 访问速度快 漂亮精美绚丽 方便实用 hao123.com ---&gt;访问量高 被360公司收购了 1）组成部分 内容 结构 样式 CSS 行为 JavaScript jQuery 2）网页的基本结构 &lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt; 内容 &lt;/body&gt; &lt;/html&gt; 3）分类 静态网页：内容不随访问者、访问时间改变而改变 动态网页：内容随访问者、访问时间改变而改变 3、HTML标记语言超文本标记语言,HyperText Markup Language 标记(元素) &lt;标记名称&gt;&lt;/标记名称&gt; 围堵元素 &lt;标记名称 /&gt; 自开自闭元素 4、HTML文件的后缀名5、HTML代码书写规范1）代码格式：被包含的代码要空4格 2）围堵元素必须有开头，也必须有结尾 3）自开自闭元素，最后面有一个斜杠 4）标记的属性值一定要用双引号或单引号包起来 5）属性与另一个属性之间用空格隔开 6、常用的HTML标记标题h1 h2 h3 h4 h5 h6 br 换行 hr 横线 paragraph 段落p division 分割，分开的div 文本标记 span 跨域 横跨 b i em font label strong address 7、特殊字符123456&lt; &amp;lt;&gt; &amp;gt;空格 &amp;nbsp; &amp; &amp;amp;版权 &amp;copy;关闭 &amp;times; 8、图像图片文件的常见格式： .jpg .jpeg .png .bmp .ico .gif &lt;img src=&quot;2015-06-24五杀.jpg&quot; /&gt; 注意src属性值为当前html文件与图片文件的相对路径或图片文件的绝对路径 9、超链接(重要)作用：用户点击后跳转新页面 &lt;a href=&quot;链接地址&quot; target=&quot;_blank&quot;&gt;链接内容&lt;/a&gt; href属性值 表示该超链接被点击后页面将要跳到哪儿去 target=&quot;_blank&quot; 表示新开一个标签页来展示href属性值内的网页]]></content>
      <categories>
        <category>学习笔记</category>
        <category>前端开发</category>
        <category>第一阶段</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>前端笔记</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
</search>
